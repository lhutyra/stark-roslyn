StarkPlatform.CodeAnalysis.Host.Mef.MSBuildMefHostServices
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage(string projectFileExtension, string language) -> void
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.LoadMetadataForReferencedProjects.get -> bool
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.LoadMetadataForReferencedProjects.set -> void
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.LoadProjectInfoAsync(string projectFilePath, StarkPlatform.CodeAnalysis.MSBuild.ProjectMap projectMap = null, System.IProgress<StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress> progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.ProjectInfo>>
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.LoadSolutionInfoAsync(string solutionFilePath, System.IProgress<StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress> progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.SolutionInfo>
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.MSBuildProjectLoader(StarkPlatform.CodeAnalysis.Workspace workspace, System.Collections.Immutable.ImmutableDictionary<string, string> properties = null) -> void
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.Properties.get -> System.Collections.Immutable.ImmutableDictionary<string, string>
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.SkipUnrecognizedProjects.get -> bool
StarkPlatform.CodeAnalysis.MSBuild.MSBuildProjectLoader.SkipUnrecognizedProjects.set -> void
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.AssociateFileExtensionWithLanguage(string projectFileExtension, string language) -> void
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.CloseSolution() -> void
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.Diagnostics.get -> System.Collections.Immutable.ImmutableList<StarkPlatform.CodeAnalysis.WorkspaceDiagnostic>
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.LoadMetadataForReferencedProjects.get -> bool
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.LoadMetadataForReferencedProjects.set -> void
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.OpenProjectAsync(string projectFilePath, System.IProgress<StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress> progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Project>
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.OpenSolutionAsync(string solutionFilePath, System.IProgress<StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress> progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Solution>
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.Properties.get -> System.Collections.Immutable.ImmutableDictionary<string, string>
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.SkipUnrecognizedProjects.get -> bool
StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.SkipUnrecognizedProjects.set -> void
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation.Build = 1 -> StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation.Evaluate = 0 -> StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation.Resolve = 2 -> StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress.ElapsedTime.get -> System.TimeSpan
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress.FilePath.get -> string
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress.Operation.get -> StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadOperation
StarkPlatform.CodeAnalysis.MSBuild.ProjectLoadProgress.TargetFramework.get -> string
StarkPlatform.CodeAnalysis.MSBuild.ProjectMap
StarkPlatform.CodeAnalysis.MSBuild.ProjectMap.Add(StarkPlatform.CodeAnalysis.Project project) -> void
override StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.CanApplyChange(StarkPlatform.CodeAnalysis.ApplyChangesKind feature) -> bool
override StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.TryApplyChanges(StarkPlatform.CodeAnalysis.Solution newSolution) -> bool
static StarkPlatform.CodeAnalysis.Host.Mef.MSBuildMefHostServices.DefaultAssemblies.get -> System.Collections.Immutable.ImmutableArray<System.Reflection.Assembly>
static StarkPlatform.CodeAnalysis.Host.Mef.MSBuildMefHostServices.DefaultServices.get -> StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices
static StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.Create() -> StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace
static StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.Create(StarkPlatform.CodeAnalysis.Host.HostServices hostServices) -> StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace
static StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.Create(System.Collections.Generic.IDictionary<string, string> properties) -> StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace
static StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace.Create(System.Collections.Generic.IDictionary<string, string> properties, StarkPlatform.CodeAnalysis.Host.HostServices hostServices) -> StarkPlatform.CodeAnalysis.MSBuild.MSBuildWorkspace
static StarkPlatform.CodeAnalysis.MSBuild.ProjectMap.Create() -> StarkPlatform.CodeAnalysis.MSBuild.ProjectMap
static StarkPlatform.CodeAnalysis.MSBuild.ProjectMap.Create(StarkPlatform.CodeAnalysis.Solution solution) -> StarkPlatform.CodeAnalysis.MSBuild.ProjectMap
