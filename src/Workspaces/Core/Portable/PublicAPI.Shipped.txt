abstract StarkPlatform.CodeAnalysis.CodeActions.CodeAction.Title.get -> string
abstract StarkPlatform.CodeAnalysis.CodeActions.CodeActionWithOptions.ComputeOperationsAsync(object options, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
abstract StarkPlatform.CodeAnalysis.CodeActions.CodeActionWithOptions.GetOptions(System.Threading.CancellationToken cancellationToken) -> object
abstract StarkPlatform.CodeAnalysis.CodeActions.PreviewOperation.GetPreviewAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<object>
abstract StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider.FixableDiagnosticIds.get -> System.Collections.Immutable.ImmutableArray<string>
abstract StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider.RegisterCodeFixesAsync(StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext context) -> System.Threading.Tasks.Task
abstract StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.GetAllDiagnosticsAsync(StarkPlatform.CodeAnalysis.Project project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostic>>
abstract StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.GetDocumentDiagnosticsAsync(StarkPlatform.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostic>>
abstract StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.GetProjectDiagnosticsAsync(StarkPlatform.CodeAnalysis.Project project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostic>>
abstract StarkPlatform.CodeAnalysis.CodeFixes.FixAllProvider.GetFixAsync(StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext fixAllContext) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.CodeActions.CodeAction>
abstract StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider.ComputeRefactoringsAsync(StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringContext context) -> System.Threading.Tasks.Task
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.GetChildren(TNode node) -> System.Collections.Generic.IEnumerable<TNode>
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.GetDescendants(TNode node) -> System.Collections.Generic.IEnumerable<TNode>
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.GetDistance(TNode oldNode, TNode newNode) -> double
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.GetLabel(TNode node) -> int
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.GetSpan(TNode node) -> StarkPlatform.CodeAnalysis.Text.TextSpan
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.LabelCount.get -> int
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.TiedToAncestor(int label) -> int
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.TreesEqual(TNode oldNode, TNode newNode) -> bool
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.TryGetParent(TNode node, out TNode parent) -> bool
abstract StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.ValuesEqual(TNode oldNode, TNode newNode) -> bool
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddBaseType(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode baseType) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddEventHandler(StarkPlatform.CodeAnalysis.SyntaxNode event, StarkPlatform.CodeAnalysis.SyntaxNode handler) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddInterfaceType(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode interfaceType) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Argument(string name, StarkPlatform.CodeAnalysis.RefKind refKind, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ArrayCreationExpression(StarkPlatform.CodeAnalysis.SyntaxNode elementType, StarkPlatform.CodeAnalysis.SyntaxNode size) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ArrayCreationExpression(StarkPlatform.CodeAnalysis.SyntaxNode elementType, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> elements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ArrayTypeExpression(StarkPlatform.CodeAnalysis.SyntaxNode type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AsPrivateInterfaceImplementation(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode interfaceType, string interfaceMemberName) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AsPublicInterfaceImplementation(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode interfaceType, string interfaceMemberName) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AssignmentStatement(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Attribute(StarkPlatform.CodeAnalysis.SyntaxNode name, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributeArguments = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AttributeArgument(string name, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AwaitExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.BaseExpression() -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.BitwiseAndExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.BitwiseNotExpression(StarkPlatform.CodeAnalysis.SyntaxNode operand) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.BitwiseOrExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CastExpression(StarkPlatform.CodeAnalysis.SyntaxNode type, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CatchClause(StarkPlatform.CodeAnalysis.SyntaxNode type, string identifier, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ClassDeclaration(string name, System.Collections.Generic.IEnumerable<string> typeParameters = null, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), StarkPlatform.CodeAnalysis.SyntaxNode baseType = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> interfaceTypes = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> members = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ClearTrivia<TNode>(TNode node) -> TNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CoalesceExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CompilationUnit(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> declarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ConditionalExpression(StarkPlatform.CodeAnalysis.SyntaxNode condition, StarkPlatform.CodeAnalysis.SyntaxNode whenTrue, StarkPlatform.CodeAnalysis.SyntaxNode whenFalse) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ConstructorDeclaration(string containingTypeName = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters = null, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> baseConstructorArguments = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ConvertExpression(StarkPlatform.CodeAnalysis.SyntaxNode type, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CustomEventDeclaration(string name, StarkPlatform.CodeAnalysis.SyntaxNode type, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> addAccessorStatements = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> removeAccessorStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.DefaultExpression(StarkPlatform.CodeAnalysis.ITypeSymbol type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.DefaultExpression(StarkPlatform.CodeAnalysis.SyntaxNode type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.DefaultSwitchSection(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.DelegateDeclaration(string name, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters = null, System.Collections.Generic.IEnumerable<string> typeParameters = null, StarkPlatform.CodeAnalysis.SyntaxNode returnType = null, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers)) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.DivideExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ElementAccessExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.EnumDeclaration(string name, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> members = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.EnumMember(string name, StarkPlatform.CodeAnalysis.SyntaxNode expression = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.EventDeclaration(string name, StarkPlatform.CodeAnalysis.SyntaxNode type, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers)) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ExitSwitchStatement() -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ExpressionStatement(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.FieldDeclaration(string name, StarkPlatform.CodeAnalysis.SyntaxNode type, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), StarkPlatform.CodeAnalysis.SyntaxNode initializer = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GenericName(string identifier, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> typeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetAccessibility(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> StarkPlatform.CodeAnalysis.Accessibility
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetAccessorDeclaration(StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetAccessors(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetAttributeArguments(StarkPlatform.CodeAnalysis.SyntaxNode attributeDeclaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetBaseAndInterfaceTypes(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetDeclarationKind(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetExpression(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetGetAccessorStatements(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetMembers(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetModifiers(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetName(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> string
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetNamespaceImports(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetParameters(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetReturnAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetSetAccessorStatements(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetStatements(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetSwitchSections(StarkPlatform.CodeAnalysis.SyntaxNode switchStatement) -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetType(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GreaterThanExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GreaterThanOrEqualExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IdentifierName(string identifier) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IfStatement(StarkPlatform.CodeAnalysis.SyntaxNode condition, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> trueStatements, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> falseStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IndexerDeclaration(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters, StarkPlatform.CodeAnalysis.SyntaxNode type, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> getAccessorStatements = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> setAccessorStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertAccessors(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> accessors) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertAttributeArguments(StarkPlatform.CodeAnalysis.SyntaxNode attributeDeclaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertMembers(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> members) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertNamespaceImports(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> imports) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertParameters(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertReturnAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertSwitchSections(StarkPlatform.CodeAnalysis.SyntaxNode switchStatement, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> switchSections) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InterfaceDeclaration(string name, System.Collections.Generic.IEnumerable<string> typeParameters = null, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> interfaceTypes = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> members = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InvocationExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IsTypeExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, StarkPlatform.CodeAnalysis.SyntaxNode type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LambdaParameter(string identifier, StarkPlatform.CodeAnalysis.SyntaxNode type = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LessThanExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LessThanOrEqualExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LiteralExpression(object value) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LocalDeclarationStatement(StarkPlatform.CodeAnalysis.SyntaxNode type, string identifier, StarkPlatform.CodeAnalysis.SyntaxNode initializer = null, bool isConst = false) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LockStatement(StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LogicalAndExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LogicalNotExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LogicalOrExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.MethodDeclaration(string name, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters = null, System.Collections.Generic.IEnumerable<string> typeParameters = null, StarkPlatform.CodeAnalysis.SyntaxNode returnType = null, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ModuloExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.MultiplyExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NameOfExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(StarkPlatform.CodeAnalysis.SyntaxNode name, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> declarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NamespaceImportDeclaration(StarkPlatform.CodeAnalysis.SyntaxNode name) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NegateExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NullableTypeExpression(StarkPlatform.CodeAnalysis.SyntaxNode type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(StarkPlatform.CodeAnalysis.SyntaxNode namedType, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ParameterDeclaration(string name, StarkPlatform.CodeAnalysis.SyntaxNode type = null, StarkPlatform.CodeAnalysis.SyntaxNode initializer = null, StarkPlatform.CodeAnalysis.RefKind refKind = StarkPlatform.CodeAnalysis.RefKind.None) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.PropertyDeclaration(string name, StarkPlatform.CodeAnalysis.SyntaxNode type, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> getAccessorStatements = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> setAccessorStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.QualifiedName(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReferenceEqualsExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReferenceNotEqualsExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.RemoveEventHandler(StarkPlatform.CodeAnalysis.SyntaxNode event, StarkPlatform.CodeAnalysis.SyntaxNode handler) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReturnStatement(StarkPlatform.CodeAnalysis.SyntaxNode expression = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.SetAccessorDeclaration(StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.StructDeclaration(string name, System.Collections.Generic.IEnumerable<string> typeParameters = null, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> interfaceTypes = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> members = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.SubtractExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.SwitchSection(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> caseExpressions, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.SwitchStatement(StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> sections) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ThisExpression() -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ThrowExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ThrowStatement(StarkPlatform.CodeAnalysis.SyntaxNode expression = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TryCastExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, StarkPlatform.CodeAnalysis.SyntaxNode type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TryCatchStatement(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> tryStatements, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> catchClauses, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> finallyStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TupleElementExpression(StarkPlatform.CodeAnalysis.SyntaxNode type, string name = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TupleExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TypedConstantExpression(StarkPlatform.CodeAnalysis.TypedConstant value) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TypeExpression(StarkPlatform.CodeAnalysis.ITypeSymbol typeSymbol) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TypeExpression(StarkPlatform.CodeAnalysis.SpecialType specialType) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TypeOfExpression(StarkPlatform.CodeAnalysis.SyntaxNode type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.UsingStatement(StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.UsingStatement(StarkPlatform.CodeAnalysis.SyntaxNode type, string name, StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueEqualsExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueNotEqualsExpression(StarkPlatform.CodeAnalysis.SyntaxNode left, StarkPlatform.CodeAnalysis.SyntaxNode right) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> lambdaParameters, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> lambdaParameters, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> lambdaParameters, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> lambdaParameters, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WhileStatement(StarkPlatform.CodeAnalysis.SyntaxNode condition, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithAccessibility(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.Accessibility accessibility) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithAccessorDeclarations(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> accessorDeclarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithExpression(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithGetAccessorStatements(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithModifiers(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithName(StarkPlatform.CodeAnalysis.SyntaxNode declaration, string name) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithSetAccessorStatements(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithStatements(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithType(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode type) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> typeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithTypeConstraint(StarkPlatform.CodeAnalysis.SyntaxNode declaration, string typeParameterName, StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind kinds, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> types = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithTypeParameters(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<string> typeParameters) -> StarkPlatform.CodeAnalysis.SyntaxNode
abstract StarkPlatform.CodeAnalysis.Host.HostLanguageServices.GetService<TLanguageService>() -> TLanguageService
abstract StarkPlatform.CodeAnalysis.Host.HostLanguageServices.Language.get -> string
abstract StarkPlatform.CodeAnalysis.Host.HostLanguageServices.WorkspaceServices.get -> StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices
abstract StarkPlatform.CodeAnalysis.Host.HostServices.CreateWorkspaceServices(StarkPlatform.CodeAnalysis.Workspace workspace) -> StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices
abstract StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.FindLanguageServices<TLanguageService>(StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.MetadataFilter filter) -> System.Collections.Generic.IEnumerable<TLanguageService>
abstract StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.GetService<TWorkspaceService>() -> TWorkspaceService
abstract StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.HostServices.get -> StarkPlatform.CodeAnalysis.Host.HostServices
abstract StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.Workspace.get -> StarkPlatform.CodeAnalysis.Workspace
abstract StarkPlatform.CodeAnalysis.Options.OptionSet.GetOption(StarkPlatform.CodeAnalysis.Options.OptionKey optionKey) -> object
abstract StarkPlatform.CodeAnalysis.Options.OptionSet.WithChangedOption(StarkPlatform.CodeAnalysis.Options.OptionKey optionAndLanguage, object value) -> StarkPlatform.CodeAnalysis.Options.OptionSet
abstract StarkPlatform.CodeAnalysis.TextLoader.LoadTextAndVersionAsync(StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.DocumentId documentId, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.TextAndVersion>
abstract StarkPlatform.CodeAnalysis.XmlDocumentationProvider.GetSourceStream(System.Threading.CancellationToken cancellationToken) -> System.IO.Stream
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.ClassName = "class name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.Comment = "comment" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.ConstantName = "constant name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.DelegateName = "delegate name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.EnumMemberName = "enum member name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.EnumName = "enum name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.EventName = "event name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.ExcludedCode = "excluded code" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.ExtensionMethodName = "extension method name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.FieldName = "field name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.Identifier = "identifier" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.InterfaceName = "interface name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.Keyword = "keyword" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.LocalName = "local name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.MethodName = "method name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.ModuleName = "module name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.NumericLiteral = "number" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.Operator = "operator" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.ParameterName = "parameter name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.PreprocessorKeyword = "preprocessor keyword" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.PreprocessorText = "preprocessor text" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.PropertyName = "property name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.Punctuation = "punctuation" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.StringLiteral = "string" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.StructName = "struct name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.Text = "text" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.TypeParameterName = "type parameter name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.VerbatimStringLiteral = "string - verbatim" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.WhiteSpace = "whitespace" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentAttributeName = "xml doc comment - attribute name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentAttributeQuotes = "xml doc comment - attribute quotes" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentAttributeValue = "xml doc comment - attribute value" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentCDataSection = "xml doc comment - cdata section" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentComment = "xml doc comment - comment" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentDelimiter = "xml doc comment - delimiter" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentEntityReference = "xml doc comment - entity reference" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentName = "xml doc comment - name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentProcessingInstruction = "xml doc comment - processing instruction" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentText = "xml doc comment - text" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralAttributeName = "xml literal - attribute name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralAttributeQuotes = "xml literal - attribute quotes" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralAttributeValue = "xml literal - attribute value" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralCDataSection = "xml literal - cdata section" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralComment = "xml literal - comment" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralDelimiter = "xml literal - delimiter" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralEmbeddedExpression = "xml literal - embedded expression" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralEntityReference = "xml literal - entity reference" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralName = "xml literal - name" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralProcessingInstruction = "xml literal - processing instruction" -> string
const StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralText = "xml literal - text" -> string
const StarkPlatform.CodeAnalysis.CodeActions.ConflictAnnotation.Kind = "CodeAction_Conflict" -> string
const StarkPlatform.CodeAnalysis.CodeActions.RenameAnnotation.Kind = "CodeAction_Rename" -> string
const StarkPlatform.CodeAnalysis.CodeActions.WarningAnnotation.Kind = "CodeAction_Warning" -> string
const StarkPlatform.CodeAnalysis.Host.Mef.ServiceLayer.Default = "Default" -> string
const StarkPlatform.CodeAnalysis.Host.Mef.ServiceLayer.Desktop = "Desktop" -> string
const StarkPlatform.CodeAnalysis.Host.Mef.ServiceLayer.Editor = "Editor" -> string
const StarkPlatform.CodeAnalysis.Host.Mef.ServiceLayer.Host = "Host" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Assembly = "Assembly" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Class = "Class" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Constant = "Constant" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Delegate = "Delegate" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Enum = "Enum" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.EnumMember = "EnumMember" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Error = "Error" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Event = "Event" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.ExtensionMethod = "ExtensionMethod" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Field = "Field" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.File = "File" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Folder = "Folder" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Interface = "Interface" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Internal = "Internal" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Intrinsic = "Intrinsic" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Keyword = "Keyword" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Label = "Label" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Local = "Local" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Method = "Method" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Module = "Module" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Namespace = "Namespace" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Operator = "Operator" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Parameter = "Parameter" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Private = "Private" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Project = "Project" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Property = "Property" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Protected = "Protected" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Public = "Public" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.RangeVariable = "RangeVariable" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Reference = "Reference" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Snippet = "Snippet" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Structure = "Structure" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.TypeParameter = "TypeParameter" -> string
const StarkPlatform.CodeAnalysis.Tags.WellKnownTags.Warning = "Warning" -> string
const StarkPlatform.CodeAnalysis.WorkspaceKind.Debugger = "Debugger" -> string
const StarkPlatform.CodeAnalysis.WorkspaceKind.Host = "Host" -> string
const StarkPlatform.CodeAnalysis.WorkspaceKind.Interactive = "Interactive" -> string
const StarkPlatform.CodeAnalysis.WorkspaceKind.MetadataAsSource = "MetadataAsSource" -> string
const StarkPlatform.CodeAnalysis.WorkspaceKind.MiscellaneousFiles = "MiscellaneousFiles" -> string
const StarkPlatform.CodeAnalysis.WorkspaceKind.Preview = "Preview" -> string
StarkPlatform.CodeAnalysis.AdhocWorkspace
StarkPlatform.CodeAnalysis.AdhocWorkspace.AddDocument(StarkPlatform.CodeAnalysis.DocumentInfo documentInfo) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.AdhocWorkspace.AddDocument(StarkPlatform.CodeAnalysis.ProjectId projectId, string name, StarkPlatform.CodeAnalysis.Text.SourceText text) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.AdhocWorkspace.AddProject(StarkPlatform.CodeAnalysis.ProjectInfo projectInfo) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.AdhocWorkspace.AddProject(string name, string language) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.AdhocWorkspace.AddProjects(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectInfo> projectInfos) -> void
StarkPlatform.CodeAnalysis.AdhocWorkspace.AddSolution(StarkPlatform.CodeAnalysis.SolutionInfo solutionInfo) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.AdhocWorkspace.AdhocWorkspace() -> void
StarkPlatform.CodeAnalysis.AdhocWorkspace.AdhocWorkspace(StarkPlatform.CodeAnalysis.Host.HostServices host, string workspaceKind = "Custom") -> void
StarkPlatform.CodeAnalysis.AdhocWorkspace.ClearSolution() -> void
StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.AddAdditionalDocument = 11 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.AddAnalyzerReference = 9 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.AddDocument = 6 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.AddMetadataReference = 4 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.AddProject = 0 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.AddProjectReference = 2 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.ChangeAdditionalDocument = 13 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.ChangeCompilationOptions = 14 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.ChangeDocument = 8 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.ChangeDocumentInfo = 16 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.ChangeParseOptions = 15 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.RemoveAdditionalDocument = 12 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.RemoveAnalyzerReference = 10 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.RemoveDocument = 7 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.RemoveMetadataReference = 5 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.RemoveProject = 1 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.ApplyChangesKind.RemoveProjectReference = 3 -> StarkPlatform.CodeAnalysis.ApplyChangesKind
StarkPlatform.CodeAnalysis.Classification.ClassificationTypeNames
StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan
StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan.ClassificationType.get -> string
StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan.ClassifiedSpan(StarkPlatform.CodeAnalysis.Text.TextSpan textSpan, string classificationType) -> void
StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan.ClassifiedSpan(string classificationType, StarkPlatform.CodeAnalysis.Text.TextSpan textSpan) -> void
StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan.Equals(StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan other) -> bool
StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan.TextSpan.get -> StarkPlatform.CodeAnalysis.Text.TextSpan
StarkPlatform.CodeAnalysis.Classification.Classifier
StarkPlatform.CodeAnalysis.CodeActions.ApplyChangesOperation
StarkPlatform.CodeAnalysis.CodeActions.ApplyChangesOperation.ApplyChangesOperation(StarkPlatform.CodeAnalysis.Solution changedSolution) -> void
StarkPlatform.CodeAnalysis.CodeActions.ApplyChangesOperation.ChangedSolution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.CodeActions.CodeAction
StarkPlatform.CodeAnalysis.CodeActions.CodeAction.CodeAction() -> void
StarkPlatform.CodeAnalysis.CodeActions.CodeAction.GetOperationsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
StarkPlatform.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
StarkPlatform.CodeAnalysis.CodeActions.CodeAction.PostProcessAsync(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation> operations, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
StarkPlatform.CodeAnalysis.CodeActions.CodeAction.PostProcessChangesAsync(StarkPlatform.CodeAnalysis.Solution changedSolution, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Solution>
StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation
StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation.CodeActionOperation() -> void
StarkPlatform.CodeAnalysis.CodeActions.CodeActionWithOptions
StarkPlatform.CodeAnalysis.CodeActions.CodeActionWithOptions.CodeActionWithOptions() -> void
StarkPlatform.CodeAnalysis.CodeActions.CodeActionWithOptions.GetOperationsAsync(object options, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
StarkPlatform.CodeAnalysis.CodeActions.ConflictAnnotation
StarkPlatform.CodeAnalysis.CodeActions.OpenDocumentOperation
StarkPlatform.CodeAnalysis.CodeActions.OpenDocumentOperation.DocumentId.get -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.CodeActions.OpenDocumentOperation.OpenDocumentOperation(StarkPlatform.CodeAnalysis.DocumentId documentId, bool activateIfAlreadyOpen = false) -> void
StarkPlatform.CodeAnalysis.CodeActions.PreviewOperation
StarkPlatform.CodeAnalysis.CodeActions.PreviewOperation.PreviewOperation() -> void
StarkPlatform.CodeAnalysis.CodeActions.RenameAnnotation
StarkPlatform.CodeAnalysis.CodeActions.WarningAnnotation
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.CancellationToken.get -> System.Threading.CancellationToken
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.CodeFixContext(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Diagnostic diagnostic, System.Action<StarkPlatform.CodeAnalysis.CodeActions.CodeAction, System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic>> registerCodeFix, System.Threading.CancellationToken cancellationToken) -> void
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.CodeFixContext(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Text.TextSpan span, System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic> diagnostics, System.Action<StarkPlatform.CodeAnalysis.CodeActions.CodeAction, System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic>> registerCodeFix, System.Threading.CancellationToken cancellationToken) -> void
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic>
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.Document.get -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.RegisterCodeFix(StarkPlatform.CodeAnalysis.CodeActions.CodeAction action, StarkPlatform.CodeAnalysis.Diagnostic diagnostic) -> void
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.RegisterCodeFix(StarkPlatform.CodeAnalysis.CodeActions.CodeAction action, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostic> diagnostics) -> void
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.RegisterCodeFix(StarkPlatform.CodeAnalysis.CodeActions.CodeAction action, System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic> diagnostics) -> void
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixContext.Span.get -> StarkPlatform.CodeAnalysis.Text.TextSpan
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider
StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider.CodeFixProvider() -> void
StarkPlatform.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute
StarkPlatform.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.ExportCodeFixProviderAttribute(string firstLanguage, params string[] additionalLanguages) -> void
StarkPlatform.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.Languages.get -> string[]
StarkPlatform.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.Name.get -> string
StarkPlatform.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.Name.set -> void
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.CancellationToken.get -> System.Threading.CancellationToken
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.CodeActionEquivalenceKey.get -> string
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.CodeFixProvider.get -> StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds.get -> System.Collections.Immutable.ImmutableHashSet<string>
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.DiagnosticProvider() -> void
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.Document.get -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.FixAllContext(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider codeFixProvider, StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope scope, string codeActionEquivalenceKey, System.Collections.Generic.IEnumerable<string> diagnosticIds, StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider fixAllDiagnosticProvider, System.Threading.CancellationToken cancellationToken) -> void
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.FixAllContext(StarkPlatform.CodeAnalysis.Project project, StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider codeFixProvider, StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope scope, string codeActionEquivalenceKey, System.Collections.Generic.IEnumerable<string> diagnosticIds, StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider fixAllDiagnosticProvider, System.Threading.CancellationToken cancellationToken) -> void
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(StarkPlatform.CodeAnalysis.Project project) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic>>
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(StarkPlatform.CodeAnalysis.Document document) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic>>
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(StarkPlatform.CodeAnalysis.Project project) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Diagnostic>>
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.Project.get -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.Scope.get -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.Solution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext.WithCancellationToken(System.Threading.CancellationToken cancellationToken) -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllContext
StarkPlatform.CodeAnalysis.CodeFixes.FixAllProvider
StarkPlatform.CodeAnalysis.CodeFixes.FixAllProvider.FixAllProvider() -> void
StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope
StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope.Custom = 3 -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope
StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope.Document = 0 -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope
StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope.Project = 1 -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope
StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope.Solution = 2 -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope
StarkPlatform.CodeAnalysis.CodeFixes.WellKnownFixAllProviders
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringContext
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.CancellationToken.get -> System.Threading.CancellationToken
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.CodeRefactoringContext(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Text.TextSpan span, System.Action<StarkPlatform.CodeAnalysis.CodeActions.CodeAction> registerRefactoring, System.Threading.CancellationToken cancellationToken) -> void
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.Document.get -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.RegisterRefactoring(StarkPlatform.CodeAnalysis.CodeActions.CodeAction action) -> void
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.Span.get -> StarkPlatform.CodeAnalysis.Text.TextSpan
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider
StarkPlatform.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider.CodeRefactoringProvider() -> void
StarkPlatform.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute
StarkPlatform.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.ExportCodeRefactoringProviderAttribute(string firstLanguage, params string[] additionalLanguages) -> void
StarkPlatform.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Languages.get -> string[]
StarkPlatform.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Name.get -> string
StarkPlatform.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Name.set -> void
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.CodeStyleOption(T value, StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption notification) -> void
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.Equals(StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T> other) -> bool
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.Notification.get -> StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.Notification.set -> void
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.ToXElement() -> System.Xml.Linq.XElement
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.Value.get -> T
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.Value.set -> void
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions
StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions.CodeStyleOptions() -> void
StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption
StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.Name.get -> string
StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.Name.set -> void
StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.Value.get -> StarkPlatform.CodeAnalysis.DiagnosticSeverity
StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.Value.set -> void
StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>
StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>.Equals(StarkPlatform.CodeAnalysis.Differencing.Edit<TNode> other) -> bool
StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>.Kind.get -> StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>.NewNode.get -> TNode
StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>.OldNode.get -> TNode
StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.EditKind.Delete = 3 -> StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.EditKind.Insert = 2 -> StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.EditKind.Move = 4 -> StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.EditKind.None = 0 -> StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.EditKind.Reorder = 5 -> StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.EditKind.Update = 1 -> StarkPlatform.CodeAnalysis.Differencing.EditKind
StarkPlatform.CodeAnalysis.Differencing.EditScript<TNode>
StarkPlatform.CodeAnalysis.Differencing.EditScript<TNode>.Edits.get -> System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>>
StarkPlatform.CodeAnalysis.Differencing.EditScript<TNode>.Match.get -> StarkPlatform.CodeAnalysis.Differencing.Match<TNode>
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.Comparer.get -> StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.GetSequenceEdits(System.Collections.Generic.IEnumerable<TNode> oldNodes, System.Collections.Generic.IEnumerable<TNode> newNodes) -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>>
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.GetTreeEdits() -> StarkPlatform.CodeAnalysis.Differencing.EditScript<TNode>
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.Matches.get -> System.Collections.Generic.IReadOnlyDictionary<TNode, TNode>
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.NewRoot.get -> TNode
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.OldRoot.get -> TNode
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.ReverseMatches.get -> System.Collections.Generic.IReadOnlyDictionary<TNode, TNode>
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.TryGetNewNode(TNode oldNode, out TNode newNode) -> bool
StarkPlatform.CodeAnalysis.Differencing.Match<TNode>.TryGetOldNode(TNode newNode, out TNode oldNode) -> bool
StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>
StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.ComputeEditScript(TNode oldRoot, TNode newRoot) -> StarkPlatform.CodeAnalysis.Differencing.EditScript<TNode>
StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.ComputeMatch(TNode oldRoot, TNode newRoot, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TNode, TNode>> knownMatches = null) -> StarkPlatform.CodeAnalysis.Differencing.Match<TNode>
StarkPlatform.CodeAnalysis.Differencing.TreeComparer<TNode>.TreeComparer() -> void
StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Document.GetLinkedDocumentIds() -> System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.Document.GetOptionsAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Options.DocumentOptionSet>
StarkPlatform.CodeAnalysis.Document.GetSemanticModelAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.SemanticModel>
StarkPlatform.CodeAnalysis.Document.GetSyntaxRootAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.SyntaxNode>
StarkPlatform.CodeAnalysis.Document.GetSyntaxTreeAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.SyntaxTree>
StarkPlatform.CodeAnalysis.Document.GetSyntaxVersionAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.VersionStamp>
StarkPlatform.CodeAnalysis.Document.GetTextChangesAsync(StarkPlatform.CodeAnalysis.Document oldDocument, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Text.TextChange>>
StarkPlatform.CodeAnalysis.Document.SourceCodeKind.get -> StarkPlatform.CodeAnalysis.SourceCodeKind
StarkPlatform.CodeAnalysis.Document.SupportsSemanticModel.get -> bool
StarkPlatform.CodeAnalysis.Document.SupportsSyntaxTree.get -> bool
StarkPlatform.CodeAnalysis.Document.TryGetSemanticModel(out StarkPlatform.CodeAnalysis.SemanticModel semanticModel) -> bool
StarkPlatform.CodeAnalysis.Document.TryGetSyntaxRoot(out StarkPlatform.CodeAnalysis.SyntaxNode root) -> bool
StarkPlatform.CodeAnalysis.Document.TryGetSyntaxTree(out StarkPlatform.CodeAnalysis.SyntaxTree syntaxTree) -> bool
StarkPlatform.CodeAnalysis.Document.TryGetSyntaxVersion(out StarkPlatform.CodeAnalysis.VersionStamp version) -> bool
StarkPlatform.CodeAnalysis.Document.WithFilePath(string filePath) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Document.WithFolders(System.Collections.Generic.IEnumerable<string> folders) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Document.WithName(string name) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Document.WithSourceCodeKind(StarkPlatform.CodeAnalysis.SourceCodeKind kind) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Document.WithSyntaxRoot(StarkPlatform.CodeAnalysis.SyntaxNode root) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Document.WithText(StarkPlatform.CodeAnalysis.Text.SourceText text) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.DocumentActiveContextChangedEventArgs
StarkPlatform.CodeAnalysis.DocumentActiveContextChangedEventArgs.DocumentActiveContextChangedEventArgs(StarkPlatform.CodeAnalysis.Solution solution, StarkPlatform.CodeAnalysis.Text.SourceTextContainer sourceTextContainer, StarkPlatform.CodeAnalysis.DocumentId oldActiveContextDocumentId, StarkPlatform.CodeAnalysis.DocumentId newActiveContextDocumentId) -> void
StarkPlatform.CodeAnalysis.DocumentActiveContextChangedEventArgs.NewActiveContextDocumentId.get -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.DocumentActiveContextChangedEventArgs.OldActiveContextDocumentId.get -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.DocumentActiveContextChangedEventArgs.Solution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.DocumentActiveContextChangedEventArgs.SourceTextContainer.get -> StarkPlatform.CodeAnalysis.Text.SourceTextContainer
StarkPlatform.CodeAnalysis.DocumentDiagnostic
StarkPlatform.CodeAnalysis.DocumentDiagnostic.DocumentDiagnostic(StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind kind, string message, StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.DocumentDiagnostic.DocumentId.get -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.DocumentEventArgs
StarkPlatform.CodeAnalysis.DocumentEventArgs.Document.get -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.DocumentEventArgs.DocumentEventArgs(StarkPlatform.CodeAnalysis.Document document) -> void
StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.DocumentId.Equals(StarkPlatform.CodeAnalysis.DocumentId other) -> bool
StarkPlatform.CodeAnalysis.DocumentId.Id.get -> System.Guid
StarkPlatform.CodeAnalysis.DocumentId.ProjectId.get -> StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.DocumentInfo
StarkPlatform.CodeAnalysis.DocumentInfo.FilePath.get -> string
StarkPlatform.CodeAnalysis.DocumentInfo.Folders.get -> System.Collections.Generic.IReadOnlyList<string>
StarkPlatform.CodeAnalysis.DocumentInfo.Id.get -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.DocumentInfo.IsGenerated.get -> bool
StarkPlatform.CodeAnalysis.DocumentInfo.Name.get -> string
StarkPlatform.CodeAnalysis.DocumentInfo.SourceCodeKind.get -> StarkPlatform.CodeAnalysis.SourceCodeKind
StarkPlatform.CodeAnalysis.DocumentInfo.TextLoader.get -> StarkPlatform.CodeAnalysis.TextLoader
StarkPlatform.CodeAnalysis.DocumentInfo.WithFilePath(string filePath) -> StarkPlatform.CodeAnalysis.DocumentInfo
StarkPlatform.CodeAnalysis.DocumentInfo.WithFolders(System.Collections.Generic.IEnumerable<string> folders) -> StarkPlatform.CodeAnalysis.DocumentInfo
StarkPlatform.CodeAnalysis.DocumentInfo.WithId(StarkPlatform.CodeAnalysis.DocumentId id) -> StarkPlatform.CodeAnalysis.DocumentInfo
StarkPlatform.CodeAnalysis.DocumentInfo.WithName(string name) -> StarkPlatform.CodeAnalysis.DocumentInfo
StarkPlatform.CodeAnalysis.DocumentInfo.WithSourceCodeKind(StarkPlatform.CodeAnalysis.SourceCodeKind kind) -> StarkPlatform.CodeAnalysis.DocumentInfo
StarkPlatform.CodeAnalysis.DocumentInfo.WithTextLoader(StarkPlatform.CodeAnalysis.TextLoader loader) -> StarkPlatform.CodeAnalysis.DocumentInfo
StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.AddAccessor = 26 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Attribute = 22 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Class = 2 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.CompilationUnit = 1 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Constructor = 10 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.ConversionOperator = 9 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.CustomEvent = 17 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Delegate = 6 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Destructor = 11 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Enum = 5 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.EnumMember = 15 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Event = 16 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Field = 12 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.GetAccessor = 24 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Indexer = 14 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Interface = 4 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.LambdaExpression = 23 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Method = 7 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Namespace = 18 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.NamespaceImport = 19 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.None = 0 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Operator = 8 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Parameter = 20 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Property = 13 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.RaiseAccessor = 28 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.RemoveAccessor = 27 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.SetAccessor = 25 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Struct = 3 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationKind.Variable = 21 -> StarkPlatform.CodeAnalysis.Editing.DeclarationKind
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Equals(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers) -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsAbstract.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsAsync.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsConst.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsNew.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsOverride.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsPartial.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsReadOnly.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsRef.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsSealed.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsStatic.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsUnsafe.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsVirtual.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsWithEvents.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.IsWriteOnly.get -> bool
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithAsync(bool isAsync) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsAbstract(bool isAbstract) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsConst(bool isConst) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsNew(bool isNew) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsOverride(bool isOverride) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsReadOnly(bool isReadOnly) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsSealed(bool isSealed) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsStatic(bool isStatic) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsUnsafe(bool isUnsafe) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsVirtual(bool isVirtual) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithIsWriteOnly(bool isWriteOnly) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithPartial(bool isPartial) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithWithEvents(bool withEvents) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
StarkPlatform.CodeAnalysis.Editing.DocumentEditor
StarkPlatform.CodeAnalysis.Editing.DocumentEditor.GetChangedDocument() -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Editing.DocumentEditor.OriginalDocument.get -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Editing.DocumentEditor.SemanticModel.get -> StarkPlatform.CodeAnalysis.SemanticModel
StarkPlatform.CodeAnalysis.Editing.ImportAdder
StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Addition = 2 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.BitwiseAnd = 3 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.BitwiseOr = 4 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Decrement = 5 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Division = 6 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Equality = 7 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.ExclusiveOr = 8 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.ExplicitConversion = 1 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.False = 9 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.GreaterThan = 10 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.GreaterThanOrEqual = 11 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.ImplicitConversion = 0 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Increment = 12 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Inequality = 13 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.LeftShift = 14 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.LessThan = 15 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.LessThanOrEqual = 16 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.LogicalNot = 17 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Modulus = 18 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Multiply = 19 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.OnesComplement = 20 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.RightShift = 21 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.Subtraction = 22 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.True = 23 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.UnaryNegation = 24 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.OperatorKind.UnaryPlus = 25 -> StarkPlatform.CodeAnalysis.Editing.OperatorKind
StarkPlatform.CodeAnalysis.Editing.SolutionEditor
StarkPlatform.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution() -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(StarkPlatform.CodeAnalysis.DocumentId id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Editing.DocumentEditor>
StarkPlatform.CodeAnalysis.Editing.SolutionEditor.OriginalSolution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Editing.SolutionEditor.SolutionEditor(StarkPlatform.CodeAnalysis.Solution solution) -> void
StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind
StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind.Constructor = 4 -> StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind
StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind.None = 0 -> StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind
StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind.ReferenceType = 1 -> StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind
StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind.ValueType = 2 -> StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind
StarkPlatform.CodeAnalysis.Editing.SymbolEditor
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.ChangedSolution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.ISymbol member, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.ISymbol member, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Location location, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Location location, StarkPlatform.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.GetChangedDocuments() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Document>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.GetCurrentDeclarationsAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.SyntaxNode>>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.GetCurrentSymbolAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
StarkPlatform.CodeAnalysis.Editing.SymbolEditor.OriginalSolution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Editing.SymbolEditorExtensions
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.Generator.get -> StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.GetChangedRoot() -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.InsertAfter(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.SyntaxNode newNode) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.InsertAfter(StarkPlatform.CodeAnalysis.SyntaxNode node, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> newNodes) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.InsertBefore(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.SyntaxNode newNode) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.InsertBefore(StarkPlatform.CodeAnalysis.SyntaxNode node, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> newNodes) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.OriginalRoot.get -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.RemoveNode(StarkPlatform.CodeAnalysis.SyntaxNode node) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.RemoveNode(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.SyntaxRemoveOptions options) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.ReplaceNode(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.SyntaxNode newNode) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.ReplaceNode(StarkPlatform.CodeAnalysis.SyntaxNode node, System.Func<StarkPlatform.CodeAnalysis.SyntaxNode, StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator, StarkPlatform.CodeAnalysis.SyntaxNode> computeReplacement) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.SyntaxEditor(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.Workspace workspace) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditor.TrackNode(StarkPlatform.CodeAnalysis.SyntaxNode node) -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddAccessors(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> accessors) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddAttributeArguments(StarkPlatform.CodeAnalysis.SyntaxNode attributeDeclaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, params StarkPlatform.CodeAnalysis.SyntaxNode[] attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddMembers(StarkPlatform.CodeAnalysis.SyntaxNode declaration, params StarkPlatform.CodeAnalysis.SyntaxNode[] members) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddMembers(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> members) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddNamespaceImports(StarkPlatform.CodeAnalysis.SyntaxNode declaration, params StarkPlatform.CodeAnalysis.SyntaxNode[] imports) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddNamespaceImports(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> imports) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddParameters(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddReturnAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, params StarkPlatform.CodeAnalysis.SyntaxNode[] attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddReturnAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AddSwitchSections(StarkPlatform.CodeAnalysis.SyntaxNode switchStatement, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> switchSections) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Argument(StarkPlatform.CodeAnalysis.RefKind refKind, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Argument(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AsPrivateInterfaceImplementation(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode interfaceType) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AsPublicInterfaceImplementation(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode interfaceType) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Attribute(StarkPlatform.CodeAnalysis.AttributeData attribute) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Attribute(string name, params StarkPlatform.CodeAnalysis.SyntaxNode[] attributeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Attribute(string name, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> attributeArguments = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.AttributeArgument(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CastExpression(StarkPlatform.CodeAnalysis.ITypeSymbol type, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CatchClause(StarkPlatform.CodeAnalysis.ITypeSymbol type, string identifier, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CompilationUnit(params StarkPlatform.CodeAnalysis.SyntaxNode[] declarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ConstructorDeclaration(StarkPlatform.CodeAnalysis.IMethodSymbol constructorMethod, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> baseConstructorArguments = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ConvertExpression(StarkPlatform.CodeAnalysis.ITypeSymbol type, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.CustomEventDeclaration(StarkPlatform.CodeAnalysis.IEventSymbol symbol, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> addAccessorStatements = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> removeAccessorStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.Declaration(StarkPlatform.CodeAnalysis.ISymbol symbol) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.DottedName(string dottedName) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ElementAccessExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, params StarkPlatform.CodeAnalysis.SyntaxNode[] arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.EventDeclaration(StarkPlatform.CodeAnalysis.IEventSymbol symbol) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.FalseLiteralExpression() -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.FieldDeclaration(StarkPlatform.CodeAnalysis.IFieldSymbol field) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.FieldDeclaration(StarkPlatform.CodeAnalysis.IFieldSymbol field, StarkPlatform.CodeAnalysis.SyntaxNode initializer) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GenericName(string identifier, params StarkPlatform.CodeAnalysis.ITypeSymbol[] typeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GenericName(string identifier, params StarkPlatform.CodeAnalysis.SyntaxNode[] typeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GenericName(string identifier, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ITypeSymbol> typeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetAccessor(StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.Editing.DeclarationKind kind) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetDeclaration(StarkPlatform.CodeAnalysis.SyntaxNode node) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetDeclaration(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.Editing.DeclarationKind kind) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IfStatement(StarkPlatform.CodeAnalysis.SyntaxNode condition, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> trueStatements, StarkPlatform.CodeAnalysis.SyntaxNode falseStatement) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IndexerDeclaration(StarkPlatform.CodeAnalysis.IPropertySymbol indexer, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> getAccessorStatements = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> setAccessorStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IndexOf<T>(System.Collections.Generic.IReadOnlyList<T> list, T element) -> int
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, params StarkPlatform.CodeAnalysis.SyntaxNode[] attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertMembers(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, params StarkPlatform.CodeAnalysis.SyntaxNode[] members) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertNamespaceImports(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, params StarkPlatform.CodeAnalysis.SyntaxNode[] imports) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertReturnAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, params StarkPlatform.CodeAnalysis.SyntaxNode[] attributes) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InvocationExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, params StarkPlatform.CodeAnalysis.SyntaxNode[] arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.IsTypeExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, StarkPlatform.CodeAnalysis.ITypeSymbol type) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LambdaParameter(string identifier, StarkPlatform.CodeAnalysis.ITypeSymbol type) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LocalDeclarationStatement(StarkPlatform.CodeAnalysis.ITypeSymbol type, string name, StarkPlatform.CodeAnalysis.SyntaxNode initializer = null, bool isConst = false) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.LocalDeclarationStatement(string name, StarkPlatform.CodeAnalysis.SyntaxNode initializer) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.MemberAccessExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, string memberName) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.MethodDeclaration(StarkPlatform.CodeAnalysis.IMethodSymbol method, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(StarkPlatform.CodeAnalysis.SyntaxNode name, params StarkPlatform.CodeAnalysis.SyntaxNode[] declarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(string name, params StarkPlatform.CodeAnalysis.SyntaxNode[] declarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(string name, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> declarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NamespaceImportDeclaration(string name) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.NullLiteralExpression() -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(StarkPlatform.CodeAnalysis.ITypeSymbol type, params StarkPlatform.CodeAnalysis.SyntaxNode[] arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(StarkPlatform.CodeAnalysis.ITypeSymbol type, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(StarkPlatform.CodeAnalysis.SyntaxNode type, params StarkPlatform.CodeAnalysis.SyntaxNode[] arguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.OperatorDeclaration(StarkPlatform.CodeAnalysis.IMethodSymbol method, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ParameterDeclaration(StarkPlatform.CodeAnalysis.IParameterSymbol symbol, StarkPlatform.CodeAnalysis.SyntaxNode initializer = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.PropertyDeclaration(StarkPlatform.CodeAnalysis.IPropertySymbol property, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> getAccessorStatements = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> setAccessorStatements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.RemoveAllAttributes(StarkPlatform.CodeAnalysis.SyntaxNode declaration) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.RemoveNodes(StarkPlatform.CodeAnalysis.SyntaxNode root, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> declarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.SwitchSection(StarkPlatform.CodeAnalysis.SyntaxNode caseExpression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.SwitchStatement(StarkPlatform.CodeAnalysis.SyntaxNode expression, params StarkPlatform.CodeAnalysis.SyntaxNode[] sections) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.SyntaxGenerator() -> void
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TrueLiteralExpression() -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TryCastExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, StarkPlatform.CodeAnalysis.ITypeSymbol type) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TryCatchStatement(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> tryStatements, params StarkPlatform.CodeAnalysis.SyntaxNode[] catchClauses) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TryFinallyStatement(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> tryStatements, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> finallyStatements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TupleElementExpression(StarkPlatform.CodeAnalysis.ITypeSymbol type, string name = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TupleTypeExpression(params StarkPlatform.CodeAnalysis.SyntaxNode[] elements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TupleTypeExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ITypeSymbol> elementTypes, System.Collections.Generic.IEnumerable<string> elementNames = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TupleTypeExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> elements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.TypeExpression(StarkPlatform.CodeAnalysis.ITypeSymbol typeSymbol, bool addImport) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.UsingStatement(string name, StarkPlatform.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(string parameterName, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(string parameterName, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(string parameterName, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(string parameterName, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithAccessorDeclarations(StarkPlatform.CodeAnalysis.SyntaxNode declaration, params StarkPlatform.CodeAnalysis.SyntaxNode[] accessorDeclarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(StarkPlatform.CodeAnalysis.SyntaxNode expression, params StarkPlatform.CodeAnalysis.SyntaxNode[] typeArguments) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithTypeConstraint(StarkPlatform.CodeAnalysis.SyntaxNode declaration, string typeParameterName, StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind kinds, params StarkPlatform.CodeAnalysis.SyntaxNode[] types) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithTypeConstraint(StarkPlatform.CodeAnalysis.SyntaxNode declaration, string typeParameterName, params StarkPlatform.CodeAnalysis.SyntaxNode[] types) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.WithTypeParameters(StarkPlatform.CodeAnalysis.SyntaxNode declaration, params string[] typeParameters) -> StarkPlatform.CodeAnalysis.SyntaxNode
StarkPlatform.CodeAnalysis.ExtensionOrderAttribute
StarkPlatform.CodeAnalysis.ExtensionOrderAttribute.After.get -> string
StarkPlatform.CodeAnalysis.ExtensionOrderAttribute.After.set -> void
StarkPlatform.CodeAnalysis.ExtensionOrderAttribute.Before.get -> string
StarkPlatform.CodeAnalysis.ExtensionOrderAttribute.Before.set -> void
StarkPlatform.CodeAnalysis.ExtensionOrderAttribute.ExtensionOrderAttribute() -> void
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnCompleted() -> void
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnDefinitionFound(StarkPlatform.CodeAnalysis.ISymbol symbol) -> void
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnFindInDocumentCompleted(StarkPlatform.CodeAnalysis.Document document) -> void
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnFindInDocumentStarted(StarkPlatform.CodeAnalysis.Document document) -> void
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnReferenceFound(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation location) -> void
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnStarted() -> void
StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress.ReportProgress(int current, int maximum) -> void
StarkPlatform.CodeAnalysis.FindSymbols.ReferencedSymbol
StarkPlatform.CodeAnalysis.FindSymbols.ReferencedSymbol.Definition.get -> StarkPlatform.CodeAnalysis.ISymbol
StarkPlatform.CodeAnalysis.FindSymbols.ReferencedSymbol.Locations.get -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation>
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.Alias.get -> StarkPlatform.CodeAnalysis.IAliasSymbol
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason.get -> StarkPlatform.CodeAnalysis.CandidateReason
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation other) -> int
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.Document.get -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation other) -> bool
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation.get -> bool
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit.get -> bool
StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.Location.get -> StarkPlatform.CodeAnalysis.Location
StarkPlatform.CodeAnalysis.FindSymbols.SymbolCallerInfo
StarkPlatform.CodeAnalysis.FindSymbols.SymbolCallerInfo.CalledSymbol.get -> StarkPlatform.CodeAnalysis.ISymbol
StarkPlatform.CodeAnalysis.FindSymbols.SymbolCallerInfo.CallingSymbol.get -> StarkPlatform.CodeAnalysis.ISymbol
StarkPlatform.CodeAnalysis.FindSymbols.SymbolCallerInfo.IsDirect.get -> bool
StarkPlatform.CodeAnalysis.FindSymbols.SymbolCallerInfo.Locations.get -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Location>
StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder
StarkPlatform.CodeAnalysis.Formatting.Formatter
StarkPlatform.CodeAnalysis.Formatting.FormattingOptions
StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle
StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle.Block = 1 -> StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle
StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle.None = 0 -> StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle
StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle.Smart = 2 -> StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle
StarkPlatform.CodeAnalysis.Host.HostLanguageServices
StarkPlatform.CodeAnalysis.Host.HostLanguageServices.GetRequiredService<TLanguageService>() -> TLanguageService
StarkPlatform.CodeAnalysis.Host.HostLanguageServices.HostLanguageServices() -> void
StarkPlatform.CodeAnalysis.Host.HostServices
StarkPlatform.CodeAnalysis.Host.HostServices.HostServices() -> void
StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices
StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.GetRequiredService<TWorkspaceService>() -> TWorkspaceService
StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.HostWorkspaceServices() -> void
StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.MetadataFilter
StarkPlatform.CodeAnalysis.Host.IAnalyzerService
StarkPlatform.CodeAnalysis.Host.IAnalyzerService.GetLoader() -> StarkPlatform.CodeAnalysis.IAnalyzerAssemblyLoader
StarkPlatform.CodeAnalysis.Host.ILanguageService
StarkPlatform.CodeAnalysis.Host.IPersistentStorage
StarkPlatform.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(StarkPlatform.CodeAnalysis.Document document, string name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.IO.Stream>
StarkPlatform.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(StarkPlatform.CodeAnalysis.Project project, string name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.IO.Stream>
StarkPlatform.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(string name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.IO.Stream>
StarkPlatform.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(StarkPlatform.CodeAnalysis.Document document, string name, System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<bool>
StarkPlatform.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(StarkPlatform.CodeAnalysis.Project project, string name, System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<bool>
StarkPlatform.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(string name, System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<bool>
StarkPlatform.CodeAnalysis.Host.IPersistentStorageService
StarkPlatform.CodeAnalysis.Host.IPersistentStorageService.GetStorage(StarkPlatform.CodeAnalysis.Solution solution) -> StarkPlatform.CodeAnalysis.Host.IPersistentStorage
StarkPlatform.CodeAnalysis.Host.ITemporaryStorageService
StarkPlatform.CodeAnalysis.Host.ITemporaryStorageService.CreateTemporaryStreamStorage(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.Host.ITemporaryStreamStorage
StarkPlatform.CodeAnalysis.Host.ITemporaryStorageService.CreateTemporaryTextStorage(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.Host.ITemporaryTextStorage
StarkPlatform.CodeAnalysis.Host.ITemporaryStreamStorage
StarkPlatform.CodeAnalysis.Host.ITemporaryStreamStorage.ReadStream(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.IO.Stream
StarkPlatform.CodeAnalysis.Host.ITemporaryStreamStorage.ReadStreamAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.IO.Stream>
StarkPlatform.CodeAnalysis.Host.ITemporaryStreamStorage.WriteStream(System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> void
StarkPlatform.CodeAnalysis.Host.ITemporaryStreamStorage.WriteStreamAsync(System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Host.ITemporaryTextStorage
StarkPlatform.CodeAnalysis.Host.ITemporaryTextStorage.ReadText(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.Text.SourceText
StarkPlatform.CodeAnalysis.Host.ITemporaryTextStorage.ReadTextAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Text.SourceText>
StarkPlatform.CodeAnalysis.Host.ITemporaryTextStorage.WriteText(StarkPlatform.CodeAnalysis.Text.SourceText text, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> void
StarkPlatform.CodeAnalysis.Host.ITemporaryTextStorage.WriteTextAsync(StarkPlatform.CodeAnalysis.Text.SourceText text, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Host.IWorkspaceService
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.ExportLanguageServiceAttribute(System.Type type, string language, string layer = "Default") -> void
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.Language.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.Layer.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.ServiceType.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.ExportLanguageServiceFactoryAttribute(System.Type type, string language, string layer = "Default") -> void
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.Language.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.Layer.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.ServiceType.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute.ExportWorkspaceServiceAttribute(System.Type serviceType, string layer = "Default") -> void
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute.Layer.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute.ServiceType.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute.ExportWorkspaceServiceFactoryAttribute(System.Type serviceType, string layer = "Default") -> void
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute.Layer.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute.ServiceType.get -> string
StarkPlatform.CodeAnalysis.Host.Mef.ILanguageServiceFactory
StarkPlatform.CodeAnalysis.Host.Mef.ILanguageServiceFactory.CreateLanguageService(StarkPlatform.CodeAnalysis.Host.HostLanguageServices languageServices) -> StarkPlatform.CodeAnalysis.Host.ILanguageService
StarkPlatform.CodeAnalysis.Host.Mef.IWorkspaceServiceFactory
StarkPlatform.CodeAnalysis.Host.Mef.IWorkspaceServiceFactory.CreateService(StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices workspaceServices) -> StarkPlatform.CodeAnalysis.Host.IWorkspaceService
StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices
StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices.MefHostServices(System.Composition.CompositionContext compositionContext) -> void
StarkPlatform.CodeAnalysis.Host.Mef.ServiceLayer
StarkPlatform.CodeAnalysis.Options.DocumentOptionSet
StarkPlatform.CodeAnalysis.Options.DocumentOptionSet.GetOption<T>(StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T> option) -> T
StarkPlatform.CodeAnalysis.Options.IOption
StarkPlatform.CodeAnalysis.Options.IOption.DefaultValue.get -> object
StarkPlatform.CodeAnalysis.Options.IOption.Feature.get -> string
StarkPlatform.CodeAnalysis.Options.IOption.IsPerLanguage.get -> bool
StarkPlatform.CodeAnalysis.Options.IOption.Name.get -> string
StarkPlatform.CodeAnalysis.Options.IOption.StorageLocations.get -> System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Options.OptionStorageLocation>
StarkPlatform.CodeAnalysis.Options.IOption.Type.get -> System.Type
StarkPlatform.CodeAnalysis.Options.Option<T>
StarkPlatform.CodeAnalysis.Options.Option<T>.DefaultValue.get -> T
StarkPlatform.CodeAnalysis.Options.Option<T>.Feature.get -> string
StarkPlatform.CodeAnalysis.Options.Option<T>.Name.get -> string
StarkPlatform.CodeAnalysis.Options.Option<T>.Option(string feature, string name) -> void
StarkPlatform.CodeAnalysis.Options.Option<T>.Option(string feature, string name, T defaultValue) -> void
StarkPlatform.CodeAnalysis.Options.Option<T>.Option(string feature, string name, T defaultValue, params StarkPlatform.CodeAnalysis.Options.OptionStorageLocation[] storageLocations) -> void
StarkPlatform.CodeAnalysis.Options.Option<T>.StorageLocations.get -> System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Options.OptionStorageLocation>
StarkPlatform.CodeAnalysis.Options.Option<T>.Type.get -> System.Type
StarkPlatform.CodeAnalysis.Options.OptionKey
StarkPlatform.CodeAnalysis.Options.OptionKey.Equals(StarkPlatform.CodeAnalysis.Options.OptionKey other) -> bool
StarkPlatform.CodeAnalysis.Options.OptionKey.Language.get -> string
StarkPlatform.CodeAnalysis.Options.OptionKey.Option.get -> StarkPlatform.CodeAnalysis.Options.IOption
StarkPlatform.CodeAnalysis.Options.OptionKey.OptionKey(StarkPlatform.CodeAnalysis.Options.IOption option, string language = null) -> void
StarkPlatform.CodeAnalysis.Options.OptionSet
StarkPlatform.CodeAnalysis.Options.OptionSet.GetOption<T>(StarkPlatform.CodeAnalysis.Options.Option<T> option) -> T
StarkPlatform.CodeAnalysis.Options.OptionSet.GetOption<T>(StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T> option, string language) -> T
StarkPlatform.CodeAnalysis.Options.OptionSet.OptionSet() -> void
StarkPlatform.CodeAnalysis.Options.OptionSet.WithChangedOption<T>(StarkPlatform.CodeAnalysis.Options.Option<T> option, T value) -> StarkPlatform.CodeAnalysis.Options.OptionSet
StarkPlatform.CodeAnalysis.Options.OptionSet.WithChangedOption<T>(StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T> option, string language, T value) -> StarkPlatform.CodeAnalysis.Options.OptionSet
StarkPlatform.CodeAnalysis.Options.OptionStorageLocation
StarkPlatform.CodeAnalysis.Options.OptionStorageLocation.OptionStorageLocation() -> void
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.DefaultValue.get -> T
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.Feature.get -> string
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.Name.get -> string
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.PerLanguageOption(string feature, string name, T defaultValue) -> void
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.PerLanguageOption(string feature, string name, T defaultValue, params StarkPlatform.CodeAnalysis.Options.OptionStorageLocation[] storageLocations) -> void
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.StorageLocations.get -> System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.Options.OptionStorageLocation>
StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.Type.get -> System.Type
StarkPlatform.CodeAnalysis.PreservationMode
StarkPlatform.CodeAnalysis.PreservationMode.PreserveIdentity = 1 -> StarkPlatform.CodeAnalysis.PreservationMode
StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue = 0 -> StarkPlatform.CodeAnalysis.PreservationMode
StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.AddAdditionalDocument(string name, StarkPlatform.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.TextDocument
StarkPlatform.CodeAnalysis.Project.AddAdditionalDocument(string name, string text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.TextDocument
StarkPlatform.CodeAnalysis.Project.AddAnalyzerReference(StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.AddAnalyzerReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.AddDocument(string name, StarkPlatform.CodeAnalysis.SyntaxNode syntaxRoot, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Project.AddDocument(string name, StarkPlatform.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Project.AddDocument(string name, string text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Project.AdditionalDocumentIds.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.Project.AdditionalDocuments.get -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.TextDocument>
StarkPlatform.CodeAnalysis.Project.AddMetadataReference(StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.AddMetadataReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference> metadataReferences) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.AddProjectReference(StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.AddProjectReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference> projectReferences) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.AllProjectReferences.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.ProjectReference>
StarkPlatform.CodeAnalysis.Project.AnalyzerOptions.get -> StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerOptions
StarkPlatform.CodeAnalysis.Project.AnalyzerReferences.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference>
StarkPlatform.CodeAnalysis.Project.AssemblyName.get -> string
StarkPlatform.CodeAnalysis.Project.CompilationOptions.get -> StarkPlatform.CodeAnalysis.CompilationOptions
StarkPlatform.CodeAnalysis.Project.ContainsAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> bool
StarkPlatform.CodeAnalysis.Project.ContainsDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> bool
StarkPlatform.CodeAnalysis.Project.DocumentIds.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.Project.Documents.get -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Document>
StarkPlatform.CodeAnalysis.Project.FilePath.get -> string
StarkPlatform.CodeAnalysis.Project.GetAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.TextDocument
StarkPlatform.CodeAnalysis.Project.GetChanges(StarkPlatform.CodeAnalysis.Project oldProject) -> StarkPlatform.CodeAnalysis.ProjectChanges
StarkPlatform.CodeAnalysis.Project.GetCompilationAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Compilation>
StarkPlatform.CodeAnalysis.Project.GetDependentSemanticVersionAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.VersionStamp>
StarkPlatform.CodeAnalysis.Project.GetDependentVersionAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.VersionStamp>
StarkPlatform.CodeAnalysis.Project.GetDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Project.GetDocument(StarkPlatform.CodeAnalysis.SyntaxTree syntaxTree) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Project.GetDocumentId(StarkPlatform.CodeAnalysis.SyntaxTree syntaxTree) -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.Project.GetLatestDocumentVersionAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.VersionStamp>
StarkPlatform.CodeAnalysis.Project.GetSemanticVersionAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.VersionStamp>
StarkPlatform.CodeAnalysis.Project.HasDocuments.get -> bool
StarkPlatform.CodeAnalysis.Project.Id.get -> StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.Project.IsSubmission.get -> bool
StarkPlatform.CodeAnalysis.Project.Language.get -> string
StarkPlatform.CodeAnalysis.Project.LanguageServices.get -> StarkPlatform.CodeAnalysis.Host.HostLanguageServices
StarkPlatform.CodeAnalysis.Project.MetadataReferences.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.MetadataReference>
StarkPlatform.CodeAnalysis.Project.Name.get -> string
StarkPlatform.CodeAnalysis.Project.OutputFilePath.get -> string
StarkPlatform.CodeAnalysis.Project.OutputRefFilePath.get -> string
StarkPlatform.CodeAnalysis.Project.ParseOptions.get -> StarkPlatform.CodeAnalysis.ParseOptions
StarkPlatform.CodeAnalysis.Project.ProjectReferences.get -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference>
StarkPlatform.CodeAnalysis.Project.RemoveAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.RemoveAnalyzerReference(StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.RemoveDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.RemoveMetadataReference(StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.RemoveProjectReference(StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.Solution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Project.SupportsCompilation.get -> bool
StarkPlatform.CodeAnalysis.Project.TryGetCompilation(out StarkPlatform.CodeAnalysis.Compilation compilation) -> bool
StarkPlatform.CodeAnalysis.Project.Version.get -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.Project.WithAnalyzerReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferencs) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.WithAssemblyName(string assemblyName) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.WithCompilationOptions(StarkPlatform.CodeAnalysis.CompilationOptions options) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.WithMetadataReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference> metadataReferences) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.WithParseOptions(StarkPlatform.CodeAnalysis.ParseOptions options) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Project.WithProjectReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference> projectReferences) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.ProjectChanges
StarkPlatform.CodeAnalysis.ProjectChanges.GetAddedAdditionalDocuments() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.ProjectChanges.GetAddedAnalyzerReferences() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference>
StarkPlatform.CodeAnalysis.ProjectChanges.GetAddedDocuments() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.ProjectChanges.GetAddedMetadataReferences() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference>
StarkPlatform.CodeAnalysis.ProjectChanges.GetAddedProjectReferences() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference>
StarkPlatform.CodeAnalysis.ProjectChanges.GetChangedAdditionalDocuments() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.ProjectChanges.GetChangedDocuments() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.ProjectChanges.GetRemovedAdditionalDocuments() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.ProjectChanges.GetRemovedAnalyzerReferences() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference>
StarkPlatform.CodeAnalysis.ProjectChanges.GetRemovedDocuments() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.ProjectChanges.GetRemovedMetadataReferences() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference>
StarkPlatform.CodeAnalysis.ProjectChanges.GetRemovedProjectReferences() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference>
StarkPlatform.CodeAnalysis.ProjectChanges.NewProject.get -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.ProjectChanges.OldProject.get -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.ProjectChanges.ProjectId.get -> StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.ProjectDependencyGraph
StarkPlatform.CodeAnalysis.ProjectDependencyGraph.GetDependencySets(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectId>>
StarkPlatform.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatDirectlyDependOnThisProject(StarkPlatform.CodeAnalysis.ProjectId projectId) -> System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.ProjectId>
StarkPlatform.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectDirectlyDependsOn(StarkPlatform.CodeAnalysis.ProjectId projectId) -> System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.ProjectId>
StarkPlatform.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectTransitivelyDependsOn(StarkPlatform.CodeAnalysis.ProjectId projectId) -> System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.ProjectId>
StarkPlatform.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatTransitivelyDependOnThisProject(StarkPlatform.CodeAnalysis.ProjectId projectId) -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectId>
StarkPlatform.CodeAnalysis.ProjectDependencyGraph.GetTopologicallySortedProjects(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectId>
StarkPlatform.CodeAnalysis.ProjectDiagnostic
StarkPlatform.CodeAnalysis.ProjectDiagnostic.ProjectDiagnostic(StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind kind, string message, StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
StarkPlatform.CodeAnalysis.ProjectDiagnostic.ProjectId.get -> StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.ProjectId.Equals(StarkPlatform.CodeAnalysis.ProjectId other) -> bool
StarkPlatform.CodeAnalysis.ProjectId.Id.get -> System.Guid
StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.AdditionalDocuments.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.DocumentInfo>
StarkPlatform.CodeAnalysis.ProjectInfo.AnalyzerReferences.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference>
StarkPlatform.CodeAnalysis.ProjectInfo.AssemblyName.get -> string
StarkPlatform.CodeAnalysis.ProjectInfo.CompilationOptions.get -> StarkPlatform.CodeAnalysis.CompilationOptions
StarkPlatform.CodeAnalysis.ProjectInfo.Documents.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.DocumentInfo>
StarkPlatform.CodeAnalysis.ProjectInfo.FilePath.get -> string
StarkPlatform.CodeAnalysis.ProjectInfo.HostObjectType.get -> System.Type
StarkPlatform.CodeAnalysis.ProjectInfo.Id.get -> StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.ProjectInfo.IsSubmission.get -> bool
StarkPlatform.CodeAnalysis.ProjectInfo.Language.get -> string
StarkPlatform.CodeAnalysis.ProjectInfo.MetadataReferences.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.MetadataReference>
StarkPlatform.CodeAnalysis.ProjectInfo.Name.get -> string
StarkPlatform.CodeAnalysis.ProjectInfo.OutputFilePath.get -> string
StarkPlatform.CodeAnalysis.ProjectInfo.OutputRefFilePath.get -> string
StarkPlatform.CodeAnalysis.ProjectInfo.ParseOptions.get -> StarkPlatform.CodeAnalysis.ParseOptions
StarkPlatform.CodeAnalysis.ProjectInfo.ProjectReferences.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.ProjectReference>
StarkPlatform.CodeAnalysis.ProjectInfo.Version.get -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.ProjectInfo.WithAdditionalDocuments(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentInfo> additionalDocuments) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithAnalyzerReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithAssemblyName(string assemblyName) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithCompilationOptions(StarkPlatform.CodeAnalysis.CompilationOptions compilationOptions) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithDocuments(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentInfo> documents) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithFilePath(string filePath) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithMetadataReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference> metadataReferences) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithName(string name) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithOutputFilePath(string outputFilePath) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithOutputRefFilePath(string outputRefFilePath) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithParseOptions(StarkPlatform.CodeAnalysis.ParseOptions parseOptions) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithProjectReferences(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference> projectReferences) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectInfo.WithVersion(StarkPlatform.CodeAnalysis.VersionStamp version) -> StarkPlatform.CodeAnalysis.ProjectInfo
StarkPlatform.CodeAnalysis.ProjectReference
StarkPlatform.CodeAnalysis.ProjectReference.Aliases.get -> System.Collections.Immutable.ImmutableArray<string>
StarkPlatform.CodeAnalysis.ProjectReference.EmbedInteropTypes.get -> bool
StarkPlatform.CodeAnalysis.ProjectReference.Equals(StarkPlatform.CodeAnalysis.ProjectReference reference) -> bool
StarkPlatform.CodeAnalysis.ProjectReference.ProjectId.get -> StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.ProjectReference.ProjectReference(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Collections.Immutable.ImmutableArray<string> aliases = default(System.Collections.Immutable.ImmutableArray<string>), bool embedInteropTypes = false) -> void
StarkPlatform.CodeAnalysis.Recommendations.RecommendationOptions
StarkPlatform.CodeAnalysis.Recommendations.Recommender
StarkPlatform.CodeAnalysis.Rename.RenameEntityKind
StarkPlatform.CodeAnalysis.Rename.RenameEntityKind.BaseSymbol = 0 -> StarkPlatform.CodeAnalysis.Rename.RenameEntityKind
StarkPlatform.CodeAnalysis.Rename.RenameEntityKind.OverloadedSymbols = 1 -> StarkPlatform.CodeAnalysis.Rename.RenameEntityKind
StarkPlatform.CodeAnalysis.Rename.RenameOptions
StarkPlatform.CodeAnalysis.Rename.Renamer
StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions
StarkPlatform.CodeAnalysis.Simplification.Simplifier
StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, string name, StarkPlatform.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, string name, string text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentInfo documentInfo) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddAnalyzerReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddAnalyzerReferences(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, string name, StarkPlatform.CodeAnalysis.SyntaxNode syntaxRoot, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null, bool isGenerated = false, StarkPlatform.CodeAnalysis.PreservationMode preservationMode = StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, string name, StarkPlatform.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null, bool isGenerated = false) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, string name, StarkPlatform.CodeAnalysis.TextLoader loader, System.Collections.Generic.IEnumerable<string> folders = null) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, string name, string text, System.Collections.Generic.IEnumerable<string> folders = null, string filePath = null) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddDocument(StarkPlatform.CodeAnalysis.DocumentInfo documentInfo) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddMetadataReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddMetadataReferences(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference> metadataReferences) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddProject(StarkPlatform.CodeAnalysis.ProjectId projectId, string name, string assemblyName, string language) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddProject(StarkPlatform.CodeAnalysis.ProjectInfo projectInfo) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddProject(string name, string assemblyName, string language) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Solution.AddProjectReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.AddProjectReferences(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference> projectReferences) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.ContainsAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> bool
StarkPlatform.CodeAnalysis.Solution.ContainsDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> bool
StarkPlatform.CodeAnalysis.Solution.ContainsProject(StarkPlatform.CodeAnalysis.ProjectId projectId) -> bool
StarkPlatform.CodeAnalysis.Solution.FilePath.get -> string
StarkPlatform.CodeAnalysis.Solution.GetAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.TextDocument
StarkPlatform.CodeAnalysis.Solution.GetChanges(StarkPlatform.CodeAnalysis.Solution oldSolution) -> StarkPlatform.CodeAnalysis.SolutionChanges
StarkPlatform.CodeAnalysis.Solution.GetDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Solution.GetDocument(StarkPlatform.CodeAnalysis.SyntaxTree syntaxTree) -> StarkPlatform.CodeAnalysis.Document
StarkPlatform.CodeAnalysis.Solution.GetDocumentId(StarkPlatform.CodeAnalysis.SyntaxTree syntaxTree) -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.Solution.GetDocumentId(StarkPlatform.CodeAnalysis.SyntaxTree syntaxTree, StarkPlatform.CodeAnalysis.ProjectId projectId) -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.Solution.GetDocumentIdsWithFilePath(string filePath) -> System.Collections.Immutable.ImmutableArray<StarkPlatform.CodeAnalysis.DocumentId>
StarkPlatform.CodeAnalysis.Solution.GetIsolatedSolution() -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.GetLatestProjectVersion() -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.Solution.GetProject(StarkPlatform.CodeAnalysis.IAssemblySymbol assemblySymbol, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Solution.GetProject(StarkPlatform.CodeAnalysis.ProjectId projectId) -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.Solution.GetProjectDependencyGraph() -> StarkPlatform.CodeAnalysis.ProjectDependencyGraph
StarkPlatform.CodeAnalysis.Solution.Id.get -> StarkPlatform.CodeAnalysis.SolutionId
StarkPlatform.CodeAnalysis.Solution.Options.get -> StarkPlatform.CodeAnalysis.Options.OptionSet
StarkPlatform.CodeAnalysis.Solution.ProjectIds.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.ProjectId>
StarkPlatform.CodeAnalysis.Solution.Projects.get -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Project>
StarkPlatform.CodeAnalysis.Solution.RemoveAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.RemoveAnalyzerReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.RemoveDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.RemoveMetadataReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.RemoveProject(StarkPlatform.CodeAnalysis.ProjectId projectId) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.RemoveProjectReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.Version.get -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.Solution.WithAdditionalDocumentText(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.Text.SourceText text, StarkPlatform.CodeAnalysis.PreservationMode mode = StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithAdditionalDocumentText(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextAndVersion textAndVersion, StarkPlatform.CodeAnalysis.PreservationMode mode = StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithAdditionalDocumentTextLoader(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextLoader loader, StarkPlatform.CodeAnalysis.PreservationMode mode) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentFilePath(StarkPlatform.CodeAnalysis.DocumentId documentId, string filePath) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentFolders(StarkPlatform.CodeAnalysis.DocumentId documentId, System.Collections.Generic.IEnumerable<string> folders) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentName(StarkPlatform.CodeAnalysis.DocumentId documentId, string name) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentSourceCodeKind(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.SourceCodeKind sourceCodeKind) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentSyntaxRoot(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.PreservationMode mode = StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentText(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.Text.SourceText text, StarkPlatform.CodeAnalysis.PreservationMode mode = StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentText(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextAndVersion textAndVersion, StarkPlatform.CodeAnalysis.PreservationMode mode = StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentText(System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId> documentIds, StarkPlatform.CodeAnalysis.Text.SourceText text, StarkPlatform.CodeAnalysis.PreservationMode mode = StarkPlatform.CodeAnalysis.PreservationMode.PreserveValue) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithDocumentTextLoader(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextLoader loader, StarkPlatform.CodeAnalysis.PreservationMode mode) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectAnalyzerReferences(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectAssemblyName(StarkPlatform.CodeAnalysis.ProjectId projectId, string assemblyName) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectCompilationOptions(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.CompilationOptions options) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectFilePath(StarkPlatform.CodeAnalysis.ProjectId projectId, string filePath) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectMetadataReferences(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference> metadataReferences) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectName(StarkPlatform.CodeAnalysis.ProjectId projectId, string name) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectOutputFilePath(StarkPlatform.CodeAnalysis.ProjectId projectId, string outputFilePath) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectOutputRefFilePath(StarkPlatform.CodeAnalysis.ProjectId projectId, string outputRefFilePath) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectParseOptions(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ParseOptions options) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.WithProjectReferences(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference> projectReferences) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Solution.Workspace.get -> StarkPlatform.CodeAnalysis.Workspace
StarkPlatform.CodeAnalysis.SolutionChanges
StarkPlatform.CodeAnalysis.SolutionChanges.GetAddedProjects() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Project>
StarkPlatform.CodeAnalysis.SolutionChanges.GetProjectChanges() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectChanges>
StarkPlatform.CodeAnalysis.SolutionChanges.GetRemovedProjects() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Project>
StarkPlatform.CodeAnalysis.SolutionId
StarkPlatform.CodeAnalysis.SolutionId.Equals(StarkPlatform.CodeAnalysis.SolutionId other) -> bool
StarkPlatform.CodeAnalysis.SolutionId.Id.get -> System.Guid
StarkPlatform.CodeAnalysis.SolutionInfo
StarkPlatform.CodeAnalysis.SolutionInfo.FilePath.get -> string
StarkPlatform.CodeAnalysis.SolutionInfo.Id.get -> StarkPlatform.CodeAnalysis.SolutionId
StarkPlatform.CodeAnalysis.SolutionInfo.Projects.get -> System.Collections.Generic.IReadOnlyList<StarkPlatform.CodeAnalysis.ProjectInfo>
StarkPlatform.CodeAnalysis.SolutionInfo.Version.get -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.Tags.WellKnownTags
StarkPlatform.CodeAnalysis.TextAndVersion
StarkPlatform.CodeAnalysis.TextAndVersion.FilePath.get -> string
StarkPlatform.CodeAnalysis.TextAndVersion.Text.get -> StarkPlatform.CodeAnalysis.Text.SourceText
StarkPlatform.CodeAnalysis.TextAndVersion.Version.get -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.TextDocument
StarkPlatform.CodeAnalysis.TextDocument.FilePath.get -> string
StarkPlatform.CodeAnalysis.TextDocument.Folders.get -> System.Collections.Generic.IReadOnlyList<string>
StarkPlatform.CodeAnalysis.TextDocument.GetTextAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Text.SourceText>
StarkPlatform.CodeAnalysis.TextDocument.GetTextVersionAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.VersionStamp>
StarkPlatform.CodeAnalysis.TextDocument.Id.get -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.TextDocument.Name.get -> string
StarkPlatform.CodeAnalysis.TextDocument.Project.get -> StarkPlatform.CodeAnalysis.Project
StarkPlatform.CodeAnalysis.TextDocument.Project.set -> void
StarkPlatform.CodeAnalysis.TextDocument.TextDocument() -> void
StarkPlatform.CodeAnalysis.TextDocument.TryGetText(out StarkPlatform.CodeAnalysis.Text.SourceText text) -> bool
StarkPlatform.CodeAnalysis.TextDocument.TryGetTextVersion(out StarkPlatform.CodeAnalysis.VersionStamp version) -> bool
StarkPlatform.CodeAnalysis.TextLoader
StarkPlatform.CodeAnalysis.TextLoader.TextLoader() -> void
StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.VersionStamp.Equals(StarkPlatform.CodeAnalysis.VersionStamp version) -> bool
StarkPlatform.CodeAnalysis.VersionStamp.GetNewerVersion() -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.VersionStamp.GetNewerVersion(StarkPlatform.CodeAnalysis.VersionStamp version) -> StarkPlatform.CodeAnalysis.VersionStamp
StarkPlatform.CodeAnalysis.Workspace
StarkPlatform.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckCanOpenDocuments() -> void
StarkPlatform.CodeAnalysis.Workspace.CheckDocumentIsClosed(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckDocumentIsOpen(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(StarkPlatform.CodeAnalysis.ProjectId fromProjectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(StarkPlatform.CodeAnalysis.ProjectId fromProjectId, StarkPlatform.CodeAnalysis.ProjectId toProjectId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectHasProjectReference(StarkPlatform.CodeAnalysis.ProjectId fromProjectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
StarkPlatform.CodeAnalysis.Workspace.CheckSolutionIsEmpty() -> void
StarkPlatform.CodeAnalysis.Workspace.ClearOpenDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, bool isSolutionClosing = false) -> void
StarkPlatform.CodeAnalysis.Workspace.ClearSolution() -> void
StarkPlatform.CodeAnalysis.Workspace.CreateSolution(StarkPlatform.CodeAnalysis.SolutionId id) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Workspace.CreateSolution(StarkPlatform.CodeAnalysis.SolutionInfo solutionInfo) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Workspace.CurrentSolution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Workspace.Dispose() -> void
StarkPlatform.CodeAnalysis.Workspace.DocumentActiveContextChanged -> System.EventHandler<StarkPlatform.CodeAnalysis.DocumentActiveContextChangedEventArgs>
StarkPlatform.CodeAnalysis.Workspace.DocumentClosed -> System.EventHandler<StarkPlatform.CodeAnalysis.DocumentEventArgs>
StarkPlatform.CodeAnalysis.Workspace.DocumentOpened -> System.EventHandler<StarkPlatform.CodeAnalysis.DocumentEventArgs>
StarkPlatform.CodeAnalysis.Workspace.Kind.get -> string
StarkPlatform.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(StarkPlatform.CodeAnalysis.DocumentInfo documentInfo) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextLoader reloader) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.Text.SourceTextContainer textContainer, bool isCurrentContext = true) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.Text.SourceText newText, StarkPlatform.CodeAnalysis.PreservationMode mode) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextLoader loader) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> void
StarkPlatform.CodeAnalysis.Workspace.OnAssemblyNameChanged(StarkPlatform.CodeAnalysis.ProjectId projectId, string assemblyName) -> void
StarkPlatform.CodeAnalysis.Workspace.OnCompilationOptionsChanged(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.CompilationOptions options) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentAdded(StarkPlatform.CodeAnalysis.DocumentInfo documentInfo) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentClosed(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextLoader reloader, bool updateActiveContext = false) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentContextUpdated(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentInfoChanged(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.DocumentInfo newInfo) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentOpened(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.Text.SourceTextContainer textContainer, bool isCurrentContext = true) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentReloaded(StarkPlatform.CodeAnalysis.DocumentInfo newDocumentInfo) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentRemoved(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.SourceCodeKind sourceCodeKind) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentTextChanged(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.Text.SourceText newText, StarkPlatform.CodeAnalysis.PreservationMode mode) -> void
StarkPlatform.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(StarkPlatform.CodeAnalysis.DocumentId documentId, StarkPlatform.CodeAnalysis.TextLoader loader) -> void
StarkPlatform.CodeAnalysis.Workspace.OnMetadataReferenceAdded(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> void
StarkPlatform.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> void
StarkPlatform.CodeAnalysis.Workspace.OnOutputFilePathChanged(StarkPlatform.CodeAnalysis.ProjectId projectId, string outputFilePath) -> void
StarkPlatform.CodeAnalysis.Workspace.OnParseOptionsChanged(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ParseOptions options) -> void
StarkPlatform.CodeAnalysis.Workspace.OnProjectAdded(StarkPlatform.CodeAnalysis.ProjectInfo projectInfo) -> void
StarkPlatform.CodeAnalysis.Workspace.OnProjectNameChanged(StarkPlatform.CodeAnalysis.ProjectId projectId, string name, string filePath) -> void
StarkPlatform.CodeAnalysis.Workspace.OnProjectReferenceAdded(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> void
StarkPlatform.CodeAnalysis.Workspace.OnProjectReferenceRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> void
StarkPlatform.CodeAnalysis.Workspace.OnSolutionAdded(StarkPlatform.CodeAnalysis.SolutionInfo solutionInfo) -> void
StarkPlatform.CodeAnalysis.Workspace.OnSolutionReloaded(StarkPlatform.CodeAnalysis.SolutionInfo reloadedSolutionInfo) -> void
StarkPlatform.CodeAnalysis.Workspace.OnSolutionRemoved() -> void
StarkPlatform.CodeAnalysis.Workspace.Options.get -> StarkPlatform.CodeAnalysis.Options.OptionSet
StarkPlatform.CodeAnalysis.Workspace.Options.set -> void
StarkPlatform.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(StarkPlatform.CodeAnalysis.Document document) -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(StarkPlatform.CodeAnalysis.Text.SourceTextContainer sourceTextContainer, StarkPlatform.CodeAnalysis.DocumentId oldActiveContextDocumentId, StarkPlatform.CodeAnalysis.DocumentId newActiveContextDocumentId) -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(StarkPlatform.CodeAnalysis.Document document) -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(StarkPlatform.CodeAnalysis.Document document) -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(StarkPlatform.CodeAnalysis.WorkspaceChangeKind kind, StarkPlatform.CodeAnalysis.Solution oldSolution, StarkPlatform.CodeAnalysis.Solution newSolution, StarkPlatform.CodeAnalysis.ProjectId projectId = null, StarkPlatform.CodeAnalysis.DocumentId documentId = null) -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Workspace.RegisterText(StarkPlatform.CodeAnalysis.Text.SourceTextContainer textContainer) -> void
StarkPlatform.CodeAnalysis.Workspace.ScheduleTask(System.Action action, string taskName = "Workspace.Task") -> System.Threading.Tasks.Task
StarkPlatform.CodeAnalysis.Workspace.ScheduleTask<T>(System.Func<T> func, string taskName = "Workspace.Task") -> System.Threading.Tasks.Task<T>
StarkPlatform.CodeAnalysis.Workspace.Services.get -> StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices
StarkPlatform.CodeAnalysis.Workspace.SetCurrentSolution(StarkPlatform.CodeAnalysis.Solution solution) -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.Workspace.UnregisterText(StarkPlatform.CodeAnalysis.Text.SourceTextContainer textContainer) -> void
StarkPlatform.CodeAnalysis.Workspace.UpdateReferencesAfterAdd() -> void
StarkPlatform.CodeAnalysis.Workspace.Workspace(StarkPlatform.CodeAnalysis.Host.HostServices host, string workspaceKind) -> void
StarkPlatform.CodeAnalysis.Workspace.WorkspaceChanged -> System.EventHandler<StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs>
StarkPlatform.CodeAnalysis.Workspace.WorkspaceFailed -> System.EventHandler<StarkPlatform.CodeAnalysis.WorkspaceDiagnosticEventArgs>
StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs
StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs.DocumentId.get -> StarkPlatform.CodeAnalysis.DocumentId
StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs.Kind.get -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs.NewSolution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs.OldSolution.get -> StarkPlatform.CodeAnalysis.Solution
StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs.ProjectId.get -> StarkPlatform.CodeAnalysis.ProjectId
StarkPlatform.CodeAnalysis.WorkspaceChangeEventArgs.WorkspaceChangeEventArgs(StarkPlatform.CodeAnalysis.WorkspaceChangeKind kind, StarkPlatform.CodeAnalysis.Solution oldSolution, StarkPlatform.CodeAnalysis.Solution newSolution, StarkPlatform.CodeAnalysis.ProjectId projectId = null, StarkPlatform.CodeAnalysis.DocumentId documentId = null) -> void
StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentAdded = 13 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentChanged = 16 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentReloaded = 15 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentRemoved = 14 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.DocumentAdded = 9 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.DocumentChanged = 12 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.DocumentInfoChanged = 17 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.DocumentReloaded = 11 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.DocumentRemoved = 10 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.ProjectAdded = 5 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.ProjectChanged = 7 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.ProjectReloaded = 8 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.ProjectRemoved = 6 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.SolutionAdded = 1 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.SolutionChanged = 0 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.SolutionCleared = 3 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.SolutionReloaded = 4 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceChangeKind.SolutionRemoved = 2 -> StarkPlatform.CodeAnalysis.WorkspaceChangeKind
StarkPlatform.CodeAnalysis.WorkspaceDiagnostic
StarkPlatform.CodeAnalysis.WorkspaceDiagnostic.Kind.get -> StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind
StarkPlatform.CodeAnalysis.WorkspaceDiagnostic.Message.get -> string
StarkPlatform.CodeAnalysis.WorkspaceDiagnostic.WorkspaceDiagnostic(StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind kind, string message) -> void
StarkPlatform.CodeAnalysis.WorkspaceDiagnosticEventArgs
StarkPlatform.CodeAnalysis.WorkspaceDiagnosticEventArgs.Diagnostic.get -> StarkPlatform.CodeAnalysis.WorkspaceDiagnostic
StarkPlatform.CodeAnalysis.WorkspaceDiagnosticEventArgs.WorkspaceDiagnosticEventArgs(StarkPlatform.CodeAnalysis.WorkspaceDiagnostic diagnostic) -> void
StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind
StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind.Failure = 0 -> StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind
StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind.Warning = 1 -> StarkPlatform.CodeAnalysis.WorkspaceDiagnosticKind
StarkPlatform.CodeAnalysis.WorkspaceKind
StarkPlatform.CodeAnalysis.WorkspaceRegistration
StarkPlatform.CodeAnalysis.WorkspaceRegistration.Workspace.get -> StarkPlatform.CodeAnalysis.Workspace
StarkPlatform.CodeAnalysis.WorkspaceRegistration.WorkspaceChanged -> System.EventHandler
StarkPlatform.CodeAnalysis.XmlDocumentationProvider
StarkPlatform.CodeAnalysis.XmlDocumentationProvider.XmlDocumentationProvider() -> void
override StarkPlatform.CodeAnalysis.AdhocWorkspace.CanApplyChange(StarkPlatform.CodeAnalysis.ApplyChangesKind feature) -> bool
override StarkPlatform.CodeAnalysis.AdhocWorkspace.CanOpenDocuments.get -> bool
override StarkPlatform.CodeAnalysis.AdhocWorkspace.CloseAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
override StarkPlatform.CodeAnalysis.AdhocWorkspace.CloseDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
override StarkPlatform.CodeAnalysis.AdhocWorkspace.OpenAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, bool activate = true) -> void
override StarkPlatform.CodeAnalysis.AdhocWorkspace.OpenDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, bool activate = true) -> void
override StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.CodeActions.ApplyChangesOperation.Apply(StarkPlatform.CodeAnalysis.Workspace workspace, System.Threading.CancellationToken cancellationToken) -> void
override StarkPlatform.CodeAnalysis.CodeActions.CodeActionWithOptions.ComputeOperationsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
override StarkPlatform.CodeAnalysis.CodeActions.OpenDocumentOperation.Apply(StarkPlatform.CodeAnalysis.Workspace workspace, System.Threading.CancellationToken cancellationToken) -> void
override StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.ToString() -> string
override StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.Differencing.Edit<TNode>.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.DocumentId.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.DocumentId.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.DocumentId.ToString() -> string
override StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.ToString() -> string
override StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices.CreateWorkspaceServices(StarkPlatform.CodeAnalysis.Workspace workspace) -> StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices
override StarkPlatform.CodeAnalysis.Options.DocumentOptionSet.GetOption(StarkPlatform.CodeAnalysis.Options.OptionKey optionKey) -> object
override StarkPlatform.CodeAnalysis.Options.DocumentOptionSet.WithChangedOption(StarkPlatform.CodeAnalysis.Options.OptionKey optionAndLanguage, object value) -> StarkPlatform.CodeAnalysis.Options.OptionSet
override StarkPlatform.CodeAnalysis.Options.Option<T>.ToString() -> string
override StarkPlatform.CodeAnalysis.Options.OptionKey.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.Options.OptionKey.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.Options.PerLanguageOption<T>.ToString() -> string
override StarkPlatform.CodeAnalysis.ProjectId.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.ProjectId.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.ProjectId.ToString() -> string
override StarkPlatform.CodeAnalysis.ProjectReference.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.ProjectReference.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.SolutionId.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.SolutionId.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.VersionStamp.Equals(object obj) -> bool
override StarkPlatform.CodeAnalysis.VersionStamp.GetHashCode() -> int
override StarkPlatform.CodeAnalysis.VersionStamp.ToString() -> string
override StarkPlatform.CodeAnalysis.WorkspaceDiagnostic.ToString() -> string
override StarkPlatform.CodeAnalysis.XmlDocumentationProvider.GetDocumentationForSymbol(string documentationMemberID, System.Globalization.CultureInfo preferredCulture, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> string
static StarkPlatform.CodeAnalysis.Classification.Classifier.GetClassifiedSpans(StarkPlatform.CodeAnalysis.SemanticModel semanticModel, StarkPlatform.CodeAnalysis.Text.TextSpan textSpan, StarkPlatform.CodeAnalysis.Workspace workspace, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan>
static StarkPlatform.CodeAnalysis.Classification.Classifier.GetClassifiedSpansAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Text.TextSpan textSpan, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Classification.ClassifiedSpan>>
static StarkPlatform.CodeAnalysis.CodeActions.CodeAction.Create(string title, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>> createChangedDocument, string equivalenceKey = null) -> StarkPlatform.CodeAnalysis.CodeActions.CodeAction
static StarkPlatform.CodeAnalysis.CodeActions.CodeAction.Create(string title, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Solution>> createChangedSolution, string equivalenceKey = null) -> StarkPlatform.CodeAnalysis.CodeActions.CodeAction
static StarkPlatform.CodeAnalysis.CodeActions.ConflictAnnotation.Create(string description) -> StarkPlatform.CodeAnalysis.SyntaxAnnotation
static StarkPlatform.CodeAnalysis.CodeActions.ConflictAnnotation.GetDescription(StarkPlatform.CodeAnalysis.SyntaxAnnotation annotation) -> string
static StarkPlatform.CodeAnalysis.CodeActions.RenameAnnotation.Create() -> StarkPlatform.CodeAnalysis.SyntaxAnnotation
static StarkPlatform.CodeAnalysis.CodeActions.WarningAnnotation.Create(string description) -> StarkPlatform.CodeAnalysis.SyntaxAnnotation
static StarkPlatform.CodeAnalysis.CodeActions.WarningAnnotation.GetDescription(StarkPlatform.CodeAnalysis.SyntaxAnnotation annotation) -> string
static StarkPlatform.CodeAnalysis.CodeFixes.WellKnownFixAllProviders.BatchFixer.get -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllProvider
static StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.Default.get -> StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>
static StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>.FromXElement(System.Xml.Linq.XElement element) -> StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<T>
static StarkPlatform.CodeAnalysis.DocumentId.CreateFromSerialized(StarkPlatform.CodeAnalysis.ProjectId projectId, System.Guid id, string debugName = null) -> StarkPlatform.CodeAnalysis.DocumentId
static StarkPlatform.CodeAnalysis.DocumentId.CreateNewId(StarkPlatform.CodeAnalysis.ProjectId projectId, string debugName = null) -> StarkPlatform.CodeAnalysis.DocumentId
static StarkPlatform.CodeAnalysis.DocumentId.operator !=(StarkPlatform.CodeAnalysis.DocumentId left, StarkPlatform.CodeAnalysis.DocumentId right) -> bool
static StarkPlatform.CodeAnalysis.DocumentId.operator ==(StarkPlatform.CodeAnalysis.DocumentId left, StarkPlatform.CodeAnalysis.DocumentId right) -> bool
static StarkPlatform.CodeAnalysis.DocumentInfo.Create(StarkPlatform.CodeAnalysis.DocumentId id, string name, System.Collections.Generic.IEnumerable<string> folders = null, StarkPlatform.CodeAnalysis.SourceCodeKind sourceCodeKind = StarkPlatform.CodeAnalysis.SourceCodeKind.Regular, StarkPlatform.CodeAnalysis.TextLoader loader = null, string filePath = null, bool isGenerated = false) -> StarkPlatform.CodeAnalysis.DocumentInfo
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Abstract.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Async.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Const.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.From(StarkPlatform.CodeAnalysis.ISymbol symbol) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.New.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.None.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.operator !=(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers left, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers right) -> bool
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.operator &(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers left, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers right) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.operator -(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers left, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers right) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.operator |(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers left, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers right) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.operator +(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers left, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers right) -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.operator ==(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers left, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers right) -> bool
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Override.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Partial.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.ReadOnly.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Ref.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Sealed.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Static.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.TryParse(string value, out StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers) -> bool
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Unsafe.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.Virtual.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WithEvents.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers.WriteOnly.get -> StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers
static StarkPlatform.CodeAnalysis.Editing.DocumentEditor.CreateAsync(StarkPlatform.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Editing.DocumentEditor>
static StarkPlatform.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.SyntaxAnnotation annotation, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Text.TextSpan span, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(StarkPlatform.CodeAnalysis.Document document, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Text.TextSpan> spans, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Editing.SymbolEditor.Create(StarkPlatform.CodeAnalysis.Document document) -> StarkPlatform.CodeAnalysis.Editing.SymbolEditor
static StarkPlatform.CodeAnalysis.Editing.SymbolEditor.Create(StarkPlatform.CodeAnalysis.Solution solution) -> StarkPlatform.CodeAnalysis.Editing.SymbolEditor
static StarkPlatform.CodeAnalysis.Editing.SymbolEditorExtensions.GetBaseOrInterfaceDeclarationReferenceAsync(this StarkPlatform.CodeAnalysis.Editing.SymbolEditor editor, StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.ITypeSymbol baseOrInterfaceType, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.SyntaxNode>
static StarkPlatform.CodeAnalysis.Editing.SymbolEditorExtensions.SetBaseTypeAsync(this StarkPlatform.CodeAnalysis.Editing.SymbolEditor editor, StarkPlatform.CodeAnalysis.INamedTypeSymbol symbol, StarkPlatform.CodeAnalysis.ITypeSymbol newBaseType, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
static StarkPlatform.CodeAnalysis.Editing.SymbolEditorExtensions.SetBaseTypeAsync(this StarkPlatform.CodeAnalysis.Editing.SymbolEditor editor, StarkPlatform.CodeAnalysis.INamedTypeSymbol symbol, System.Func<StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator, StarkPlatform.CodeAnalysis.SyntaxNode> getNewBaseType, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode attribute) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode attributeDeclaration, StarkPlatform.CodeAnalysis.SyntaxNode attributeArgument) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode baseType) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode interfaceType) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode member) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode parameter) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode attribute) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> members) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertParameter(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, int index, StarkPlatform.CodeAnalysis.SyntaxNode parameter) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.Accessibility accessibility) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode expression) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, string name) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, StarkPlatform.CodeAnalysis.SyntaxNode type) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, string typeParameterName, StarkPlatform.CodeAnalysis.Editing.SpecialTypeConstraintKind kind, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> types) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(this StarkPlatform.CodeAnalysis.Editing.SyntaxEditor editor, StarkPlatform.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable<string> typeParameters) -> void
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.DefaultRemoveOptions -> StarkPlatform.CodeAnalysis.SyntaxRemoveOptions
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetGenerator(StarkPlatform.CodeAnalysis.Document document) -> StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetGenerator(StarkPlatform.CodeAnalysis.Project project) -> StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.GetGenerator(StarkPlatform.CodeAnalysis.Workspace workspace, string language) -> StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.PreserveTrivia<TNode>(TNode node, System.Func<TNode, StarkPlatform.CodeAnalysis.SyntaxNode> nodeChanger) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.RemoveRange<TNode>(StarkPlatform.CodeAnalysis.SeparatedSyntaxList<TNode> list, int offset, int count) -> StarkPlatform.CodeAnalysis.SeparatedSyntaxList<TNode>
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.RemoveRange<TNode>(StarkPlatform.CodeAnalysis.SyntaxList<TNode> list, int offset, int count) -> StarkPlatform.CodeAnalysis.SyntaxList<TNode>
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReplaceRange(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxNode node, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> replacements) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReplaceWithTrivia(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxNode original, StarkPlatform.CodeAnalysis.SyntaxNode replacement) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReplaceWithTrivia(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxToken original, StarkPlatform.CodeAnalysis.SyntaxToken replacement) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReplaceWithTrivia<TNode>(StarkPlatform.CodeAnalysis.SyntaxNode root, TNode original, System.Func<TNode, StarkPlatform.CodeAnalysis.SyntaxNode> replacer) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.operator !=(StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation left, StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation right) -> bool
static StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation.operator ==(StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation left, StarkPlatform.CodeAnalysis.FindSymbols.ReferenceLocation right) -> bool
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindCallersAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.Document> documents, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.FindSymbols.SymbolCallerInfo>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindCallersAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.FindSymbols.SymbolCallerInfo>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindDeclarationsAsync(StarkPlatform.CodeAnalysis.Project project, string name, bool ignoreCase, StarkPlatform.CodeAnalysis.SymbolFilter filter, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindDeclarationsAsync(StarkPlatform.CodeAnalysis.Project project, string name, bool ignoreCase, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindDerivedClassesAsync(StarkPlatform.CodeAnalysis.INamedTypeSymbol type, StarkPlatform.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.Project> projects = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.INamedTypeSymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindImplementationsAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.Project> projects = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindImplementedInterfaceMembersAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.Project> projects = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindOverridesAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.Project> projects = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindReferencesAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, StarkPlatform.CodeAnalysis.FindSymbols.IFindReferencesProgress progress, System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.Document> documents, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.FindSymbols.ReferencedSymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindReferencesAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<StarkPlatform.CodeAnalysis.Document> documents, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.FindSymbols.ReferencedSymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindReferencesAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.FindSymbols.ReferencedSymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSimilarSymbols<TSymbol>(TSymbol symbol, StarkPlatform.CodeAnalysis.Compilation compilation, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<TSymbol>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Project project, string name, bool ignoreCase, StarkPlatform.CodeAnalysis.SymbolFilter filter, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Project project, string name, bool ignoreCase, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Project project, System.Func<string, bool> predicate, StarkPlatform.CodeAnalysis.SymbolFilter filter, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Project project, System.Func<string, bool> predicate, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Solution solution, string name, bool ignoreCase, StarkPlatform.CodeAnalysis.SymbolFilter filter, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Solution solution, string name, bool ignoreCase, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Solution solution, System.Func<string, bool> predicate, StarkPlatform.CodeAnalysis.SymbolFilter filter, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(StarkPlatform.CodeAnalysis.Solution solution, System.Func<string, bool> predicate, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDefinitionAsync(StarkPlatform.CodeAnalysis.ISymbol symbol, StarkPlatform.CodeAnalysis.Solution solution, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSymbolAtPosition(StarkPlatform.CodeAnalysis.SemanticModel semanticModel, int position, StarkPlatform.CodeAnalysis.Workspace workspace, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.ISymbol
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSymbolAtPositionAsync(StarkPlatform.CodeAnalysis.Document document, int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
static StarkPlatform.CodeAnalysis.FindSymbols.SymbolFinder.FindSymbolAtPositionAsync(StarkPlatform.CodeAnalysis.SemanticModel semanticModel, int position, StarkPlatform.CodeAnalysis.Workspace workspace, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.ISymbol>
static StarkPlatform.CodeAnalysis.Formatting.Formatter.Annotation.get -> StarkPlatform.CodeAnalysis.SyntaxAnnotation
static StarkPlatform.CodeAnalysis.Formatting.Formatter.Format(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.SyntaxAnnotation annotation, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Formatting.Formatter.Format(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.Text.TextSpan span, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Formatting.Formatter.Format(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Formatting.Formatter.Format(StarkPlatform.CodeAnalysis.SyntaxNode node, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Text.TextSpan> spans, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.SyntaxNode
static StarkPlatform.CodeAnalysis.Formatting.Formatter.FormatAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Formatting.Formatter.FormatAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.SyntaxAnnotation annotation, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Formatting.Formatter.FormatAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Text.TextSpan span, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Formatting.Formatter.FormatAsync(StarkPlatform.CodeAnalysis.Document document, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Text.TextSpan> spans, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Formatting.Formatter.GetFormattedTextChanges(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.Text.TextSpan span, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IList<StarkPlatform.CodeAnalysis.Text.TextChange>
static StarkPlatform.CodeAnalysis.Formatting.Formatter.GetFormattedTextChanges(StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IList<StarkPlatform.CodeAnalysis.Text.TextChange>
static StarkPlatform.CodeAnalysis.Formatting.Formatter.GetFormattedTextChanges(StarkPlatform.CodeAnalysis.SyntaxNode node, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Text.TextSpan> spans, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IList<StarkPlatform.CodeAnalysis.Text.TextChange>
static StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentationSize.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<int>
static StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.NewLine.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<string>
static StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.SmartIndent.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.IndentStyle>
static StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.TabSize.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<int>
static StarkPlatform.CodeAnalysis.Formatting.FormattingOptions.UseTabs.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices.Create(System.Collections.Generic.IEnumerable<System.Reflection.Assembly> assemblies) -> StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices
static StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices.Create(System.Composition.CompositionContext compositionContext) -> StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices
static StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices.DefaultAssemblies.get -> System.Collections.Immutable.ImmutableArray<System.Reflection.Assembly>
static StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices.DefaultHost.get -> StarkPlatform.CodeAnalysis.Host.Mef.MefHostServices
static StarkPlatform.CodeAnalysis.Options.Option<T>.implicit operator StarkPlatform.CodeAnalysis.Options.OptionKey(StarkPlatform.CodeAnalysis.Options.Option<T> option) -> StarkPlatform.CodeAnalysis.Options.OptionKey
static StarkPlatform.CodeAnalysis.Options.OptionKey.operator !=(StarkPlatform.CodeAnalysis.Options.OptionKey left, StarkPlatform.CodeAnalysis.Options.OptionKey right) -> bool
static StarkPlatform.CodeAnalysis.Options.OptionKey.operator ==(StarkPlatform.CodeAnalysis.Options.OptionKey left, StarkPlatform.CodeAnalysis.Options.OptionKey right) -> bool
static StarkPlatform.CodeAnalysis.ProjectId.CreateFromSerialized(System.Guid id, string debugName = null) -> StarkPlatform.CodeAnalysis.ProjectId
static StarkPlatform.CodeAnalysis.ProjectId.CreateNewId(string debugName = null) -> StarkPlatform.CodeAnalysis.ProjectId
static StarkPlatform.CodeAnalysis.ProjectId.operator !=(StarkPlatform.CodeAnalysis.ProjectId left, StarkPlatform.CodeAnalysis.ProjectId right) -> bool
static StarkPlatform.CodeAnalysis.ProjectId.operator ==(StarkPlatform.CodeAnalysis.ProjectId left, StarkPlatform.CodeAnalysis.ProjectId right) -> bool
static StarkPlatform.CodeAnalysis.ProjectInfo.Create(StarkPlatform.CodeAnalysis.ProjectId id, StarkPlatform.CodeAnalysis.VersionStamp version, string name, string assemblyName, string language, string filePath = null, string outputFilePath = null, StarkPlatform.CodeAnalysis.CompilationOptions compilationOptions = null, StarkPlatform.CodeAnalysis.ParseOptions parseOptions = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentInfo> documents = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference> projectReferences = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference> metadataReferences = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentInfo> additionalDocuments = null, bool isSubmission = false, System.Type hostObjectType = null, string outputRefFilePath = null) -> StarkPlatform.CodeAnalysis.ProjectInfo
static StarkPlatform.CodeAnalysis.ProjectInfo.Create(StarkPlatform.CodeAnalysis.ProjectId id, StarkPlatform.CodeAnalysis.VersionStamp version, string name, string assemblyName, string language, string filePath, string outputFilePath, StarkPlatform.CodeAnalysis.CompilationOptions compilationOptions, StarkPlatform.CodeAnalysis.ParseOptions parseOptions, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentInfo> documents, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectReference> projectReferences, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.MetadataReference> metadataReferences, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference> analyzerReferences, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentInfo> additionalDocuments, bool isSubmission, System.Type hostObjectType) -> StarkPlatform.CodeAnalysis.ProjectInfo
static StarkPlatform.CodeAnalysis.ProjectReference.operator !=(StarkPlatform.CodeAnalysis.ProjectReference left, StarkPlatform.CodeAnalysis.ProjectReference right) -> bool
static StarkPlatform.CodeAnalysis.ProjectReference.operator ==(StarkPlatform.CodeAnalysis.ProjectReference left, StarkPlatform.CodeAnalysis.ProjectReference right) -> bool
static StarkPlatform.CodeAnalysis.Recommendations.RecommendationOptions.FilterOutOfScopeLocals.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Recommendations.RecommendationOptions.HideAdvancedMembers.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Recommendations.Recommender.GetRecommendedSymbolsAtPosition(StarkPlatform.CodeAnalysis.SemanticModel semanticModel, int position, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>
static StarkPlatform.CodeAnalysis.Recommendations.Recommender.GetRecommendedSymbolsAtPositionAsync(StarkPlatform.CodeAnalysis.SemanticModel semanticModel, int position, StarkPlatform.CodeAnalysis.Workspace workspace, StarkPlatform.CodeAnalysis.Options.OptionSet options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ISymbol>>
static StarkPlatform.CodeAnalysis.Rename.RenameOptions.PreviewChanges.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Rename.RenameOptions.RenameInComments.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Rename.RenameOptions.RenameInStrings.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Rename.RenameOptions.RenameOverloads.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Rename.Renamer.RenameSymbolAsync(StarkPlatform.CodeAnalysis.Solution solution, StarkPlatform.CodeAnalysis.ISymbol symbol, string newName, StarkPlatform.CodeAnalysis.Options.OptionSet optionSet, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Solution>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToBaseType.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToGenericType.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.PreferAliasToQualification.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInference.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInLocalDeclaration.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.PreferOmittingModuleNamesInQualification.get -> StarkPlatform.CodeAnalysis.Options.Option<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.QualifyEventAccess.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.QualifyFieldAccess.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.QualifyMemberAccessWithThisOrMe.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.QualifyMethodAccess.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Simplification.SimplificationOptions.QualifyPropertyAccess.get -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<bool>
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.Annotation.get -> StarkPlatform.CodeAnalysis.SyntaxAnnotation
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.Expand(StarkPlatform.CodeAnalysis.SyntaxToken token, StarkPlatform.CodeAnalysis.SemanticModel semanticModel, StarkPlatform.CodeAnalysis.Workspace workspace, System.Func<StarkPlatform.CodeAnalysis.SyntaxNode, bool> expandInsideNode = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> StarkPlatform.CodeAnalysis.SyntaxToken
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.Expand<TNode>(TNode node, StarkPlatform.CodeAnalysis.SemanticModel semanticModel, StarkPlatform.CodeAnalysis.Workspace workspace, System.Func<StarkPlatform.CodeAnalysis.SyntaxNode, bool> expandInsideNode = null, bool expandParameter = false, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> TNode
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.ExpandAsync(StarkPlatform.CodeAnalysis.SyntaxToken token, StarkPlatform.CodeAnalysis.Document document, System.Func<StarkPlatform.CodeAnalysis.SyntaxNode, bool> expandInsideNode = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.SyntaxToken>
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.ExpandAsync<TNode>(TNode node, StarkPlatform.CodeAnalysis.Document document, System.Func<StarkPlatform.CodeAnalysis.SyntaxNode, bool> expandInsideNode = null, bool expandParameter = false, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TNode>
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.ReduceAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Options.OptionSet optionSet = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.ReduceAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.SyntaxAnnotation annotation, StarkPlatform.CodeAnalysis.Options.OptionSet optionSet = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.ReduceAsync(StarkPlatform.CodeAnalysis.Document document, StarkPlatform.CodeAnalysis.Text.TextSpan span, StarkPlatform.CodeAnalysis.Options.OptionSet optionSet = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.ReduceAsync(StarkPlatform.CodeAnalysis.Document document, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.Text.TextSpan> spans, StarkPlatform.CodeAnalysis.Options.OptionSet optionSet = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
static StarkPlatform.CodeAnalysis.Simplification.Simplifier.SpecialTypeAnnotation.get -> StarkPlatform.CodeAnalysis.SyntaxAnnotation
static StarkPlatform.CodeAnalysis.SolutionId.CreateFromSerialized(System.Guid id, string debugName = null) -> StarkPlatform.CodeAnalysis.SolutionId
static StarkPlatform.CodeAnalysis.SolutionId.CreateNewId(string debugName = null) -> StarkPlatform.CodeAnalysis.SolutionId
static StarkPlatform.CodeAnalysis.SolutionId.operator !=(StarkPlatform.CodeAnalysis.SolutionId left, StarkPlatform.CodeAnalysis.SolutionId right) -> bool
static StarkPlatform.CodeAnalysis.SolutionId.operator ==(StarkPlatform.CodeAnalysis.SolutionId left, StarkPlatform.CodeAnalysis.SolutionId right) -> bool
static StarkPlatform.CodeAnalysis.SolutionInfo.Create(StarkPlatform.CodeAnalysis.SolutionId id, StarkPlatform.CodeAnalysis.VersionStamp version, string filePath = null, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.ProjectInfo> projects = null) -> StarkPlatform.CodeAnalysis.SolutionInfo
static StarkPlatform.CodeAnalysis.TextAndVersion.Create(StarkPlatform.CodeAnalysis.Text.SourceText text, StarkPlatform.CodeAnalysis.VersionStamp version, string filePath = null) -> StarkPlatform.CodeAnalysis.TextAndVersion
static StarkPlatform.CodeAnalysis.TextLoader.From(StarkPlatform.CodeAnalysis.Text.SourceTextContainer container, StarkPlatform.CodeAnalysis.VersionStamp version, string filePath = null) -> StarkPlatform.CodeAnalysis.TextLoader
static StarkPlatform.CodeAnalysis.TextLoader.From(StarkPlatform.CodeAnalysis.TextAndVersion textAndVersion) -> StarkPlatform.CodeAnalysis.TextLoader
static StarkPlatform.CodeAnalysis.VersionStamp.Create() -> StarkPlatform.CodeAnalysis.VersionStamp
static StarkPlatform.CodeAnalysis.VersionStamp.Create(System.DateTime utcTimeLastModified) -> StarkPlatform.CodeAnalysis.VersionStamp
static StarkPlatform.CodeAnalysis.VersionStamp.Default.get -> StarkPlatform.CodeAnalysis.VersionStamp
static StarkPlatform.CodeAnalysis.VersionStamp.operator !=(StarkPlatform.CodeAnalysis.VersionStamp left, StarkPlatform.CodeAnalysis.VersionStamp right) -> bool
static StarkPlatform.CodeAnalysis.VersionStamp.operator ==(StarkPlatform.CodeAnalysis.VersionStamp left, StarkPlatform.CodeAnalysis.VersionStamp right) -> bool
static StarkPlatform.CodeAnalysis.Workspace.GetWorkspaceRegistration(StarkPlatform.CodeAnalysis.Text.SourceTextContainer textContainer) -> StarkPlatform.CodeAnalysis.WorkspaceRegistration
static StarkPlatform.CodeAnalysis.Workspace.TryGetWorkspace(StarkPlatform.CodeAnalysis.Text.SourceTextContainer textContainer, out StarkPlatform.CodeAnalysis.Workspace workspace) -> bool
static StarkPlatform.CodeAnalysis.XmlDocumentationProvider.CreateFromBytes(byte[] xmlDocCommentBytes) -> StarkPlatform.CodeAnalysis.XmlDocumentationProvider
static StarkPlatform.CodeAnalysis.XmlDocumentationProvider.CreateFromFile(string xmlDocCommentFilePath) -> StarkPlatform.CodeAnalysis.XmlDocumentationProvider
static readonly StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<bool>>
static readonly StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<bool>>
static readonly StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyEventAccess -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<bool>>
static readonly StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyFieldAccess -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<bool>>
static readonly StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyMethodAccess -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<bool>>
static readonly StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyPropertyAccess -> StarkPlatform.CodeAnalysis.Options.PerLanguageOption<StarkPlatform.CodeAnalysis.CodeStyle.CodeStyleOption<bool>>
static readonly StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.Error -> StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption
static readonly StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.None -> StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption
static readonly StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.Suggestion -> StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption
static readonly StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption.Warning -> StarkPlatform.CodeAnalysis.CodeStyle.NotificationOption
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeAction.ComputePreviewOperationsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation>>
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeAction.EquivalenceKey.get -> string
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeAction.GetChangedDocumentAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Solution>
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeAction.PostProcessChangesAsync(StarkPlatform.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<StarkPlatform.CodeAnalysis.Document>
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeAction.Tags.get -> System.Collections.Immutable.ImmutableArray<string>
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation.Apply(StarkPlatform.CodeAnalysis.Workspace workspace, System.Threading.CancellationToken cancellationToken) -> void
virtual StarkPlatform.CodeAnalysis.CodeActions.CodeActionOperation.Title.get -> string
virtual StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider.GetFixAllProvider() -> StarkPlatform.CodeAnalysis.CodeFixes.FixAllProvider
virtual StarkPlatform.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllDiagnosticIds(StarkPlatform.CodeAnalysis.CodeFixes.CodeFixProvider originalCodeFixProvider) -> System.Collections.Generic.IEnumerable<string>
virtual StarkPlatform.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllScopes() -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.CodeFixes.FixAllScope>
virtual StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertNodesAfter(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxNode node, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> newDeclarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
virtual StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.InsertNodesBefore(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxNode node, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> newDeclarations) -> StarkPlatform.CodeAnalysis.SyntaxNode
virtual StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.MemberAccessExpression(StarkPlatform.CodeAnalysis.SyntaxNode expression, StarkPlatform.CodeAnalysis.SyntaxNode memberName) -> StarkPlatform.CodeAnalysis.SyntaxNode
virtual StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.OperatorDeclaration(StarkPlatform.CodeAnalysis.Editing.OperatorKind kind, System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> parameters = null, StarkPlatform.CodeAnalysis.SyntaxNode returnType = null, StarkPlatform.CodeAnalysis.Accessibility accessibility = StarkPlatform.CodeAnalysis.Accessibility.NotApplicable, StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers modifiers = default(StarkPlatform.CodeAnalysis.Editing.DeclarationModifiers), System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.SyntaxNode> statements = null) -> StarkPlatform.CodeAnalysis.SyntaxNode
virtual StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.RemoveNode(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxNode node) -> StarkPlatform.CodeAnalysis.SyntaxNode
virtual StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.RemoveNode(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.SyntaxRemoveOptions options) -> StarkPlatform.CodeAnalysis.SyntaxNode
virtual StarkPlatform.CodeAnalysis.Editing.SyntaxGenerator.ReplaceNode(StarkPlatform.CodeAnalysis.SyntaxNode root, StarkPlatform.CodeAnalysis.SyntaxNode node, StarkPlatform.CodeAnalysis.SyntaxNode newDeclaration) -> StarkPlatform.CodeAnalysis.SyntaxNode
virtual StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.GetLanguageServices(string languageName) -> StarkPlatform.CodeAnalysis.Host.HostLanguageServices
virtual StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.IsSupported(string languageName) -> bool
virtual StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.PersistentStorage.get -> StarkPlatform.CodeAnalysis.Host.IPersistentStorageService
virtual StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.SupportedLanguages.get -> System.Collections.Generic.IEnumerable<string>
virtual StarkPlatform.CodeAnalysis.Host.HostWorkspaceServices.TemporaryStorage.get -> StarkPlatform.CodeAnalysis.Host.ITemporaryStorageService
virtual StarkPlatform.CodeAnalysis.Workspace.AdjustReloadedProject(StarkPlatform.CodeAnalysis.Project oldProject, StarkPlatform.CodeAnalysis.Project reloadedProject) -> StarkPlatform.CodeAnalysis.Project
virtual StarkPlatform.CodeAnalysis.Workspace.AdjustReloadedSolution(StarkPlatform.CodeAnalysis.Solution oldSolution, StarkPlatform.CodeAnalysis.Solution reloadedSolution) -> StarkPlatform.CodeAnalysis.Solution
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(StarkPlatform.CodeAnalysis.DocumentInfo info, StarkPlatform.CodeAnalysis.Text.SourceText text) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(StarkPlatform.CodeAnalysis.DocumentId id, StarkPlatform.CodeAnalysis.Text.SourceText text) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.CompilationOptions options) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyDocumentAdded(StarkPlatform.CodeAnalysis.DocumentInfo info, StarkPlatform.CodeAnalysis.Text.SourceText text) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyDocumentInfoChanged(StarkPlatform.CodeAnalysis.DocumentId id, StarkPlatform.CodeAnalysis.DocumentInfo info) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyDocumentRemoved(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyDocumentTextChanged(StarkPlatform.CodeAnalysis.DocumentId id, StarkPlatform.CodeAnalysis.Text.SourceText text) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.MetadataReference metadataReference) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyParseOptionsChanged(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ParseOptions options) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyProjectAdded(StarkPlatform.CodeAnalysis.ProjectInfo project) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyProjectChanges(StarkPlatform.CodeAnalysis.ProjectChanges projectChanges) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId, StarkPlatform.CodeAnalysis.ProjectReference projectReference) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ApplyProjectRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.CanApplyChange(StarkPlatform.CodeAnalysis.ApplyChangesKind feature) -> bool
virtual StarkPlatform.CodeAnalysis.Workspace.CanApplyParseOptionChange(StarkPlatform.CodeAnalysis.ParseOptions oldOptions, StarkPlatform.CodeAnalysis.ParseOptions newOptions, StarkPlatform.CodeAnalysis.Project project) -> bool
virtual StarkPlatform.CodeAnalysis.Workspace.CanOpenDocuments.get -> bool
virtual StarkPlatform.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ClearDocumentData(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ClearProjectData(StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.ClearSolutionData() -> void
virtual StarkPlatform.CodeAnalysis.Workspace.CloseAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.CloseDocument(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.Dispose(bool finalize) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.GetAdditionalDocumentName(StarkPlatform.CodeAnalysis.DocumentId documentId) -> string
virtual StarkPlatform.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(StarkPlatform.CodeAnalysis.Text.SourceTextContainer container) -> StarkPlatform.CodeAnalysis.DocumentId
virtual StarkPlatform.CodeAnalysis.Workspace.GetDocumentName(StarkPlatform.CodeAnalysis.DocumentId documentId) -> string
virtual StarkPlatform.CodeAnalysis.Workspace.GetOpenDocumentIds(StarkPlatform.CodeAnalysis.ProjectId projectId = null) -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
virtual StarkPlatform.CodeAnalysis.Workspace.GetProjectName(StarkPlatform.CodeAnalysis.ProjectId projectId) -> string
virtual StarkPlatform.CodeAnalysis.Workspace.GetRelatedDocumentIds(StarkPlatform.CodeAnalysis.Text.SourceTextContainer container) -> System.Collections.Generic.IEnumerable<StarkPlatform.CodeAnalysis.DocumentId>
virtual StarkPlatform.CodeAnalysis.Workspace.IsDocumentOpen(StarkPlatform.CodeAnalysis.DocumentId documentId) -> bool
virtual StarkPlatform.CodeAnalysis.Workspace.OnDocumentClosing(StarkPlatform.CodeAnalysis.DocumentId documentId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.OnDocumentTextChanged(StarkPlatform.CodeAnalysis.Document document) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.OnProjectReloaded(StarkPlatform.CodeAnalysis.ProjectInfo reloadedProjectInfo) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.OnProjectRemoved(StarkPlatform.CodeAnalysis.ProjectId projectId) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.OnWorkspaceFailed(StarkPlatform.CodeAnalysis.WorkspaceDiagnostic diagnostic) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.OpenAdditionalDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, bool activate = true) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.OpenDocument(StarkPlatform.CodeAnalysis.DocumentId documentId, bool activate = true) -> void
virtual StarkPlatform.CodeAnalysis.Workspace.PartialSemanticsEnabled.get -> bool
virtual StarkPlatform.CodeAnalysis.Workspace.TryApplyChanges(StarkPlatform.CodeAnalysis.Solution newSolution) -> bool
